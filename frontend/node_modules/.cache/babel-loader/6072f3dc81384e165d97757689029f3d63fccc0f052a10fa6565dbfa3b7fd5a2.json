{"ast":null,"code":"// src/pages/DatabaseReset.js\n// Página temporal para ejecutar limpieza de base de datos\nimport React,{useState}from'react';import{Container,Card,Button,Alert,ProgressBar,Form}from'react-bootstrap';import{resetDatabaseForP2P,cleanDatabase,createInitialStructures}from'../scripts/cleanDatabase';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function DatabaseReset(){const[loading,setLoading]=useState(false);const[progress,setProgress]=useState(0);const[message,setMessage]=useState('');const[error,setError]=useState('');const[success,setSuccess]=useState(false);const[confirmation,setConfirmation]=useState('');const handleReset=async()=>{if(confirmation!=='CONFIRMAR RESET'){setError('Debes escribir \"CONFIRMAR RESET\" para proceder');return;}setLoading(true);setProgress(0);setMessage('');setError('');setSuccess(false);try{setMessage('🧹 Iniciando limpieza de base de datos...');setProgress(20);await cleanDatabase();setMessage('✅ Base de datos limpiada exitosamente');setProgress(60);setMessage('🏗️ Creando estructuras iniciales...');await createInitialStructures();setProgress(80);setMessage('🎉 Reset completo exitoso!');setProgress(100);setSuccess(true);}catch(error){console.error('Error en reset:',error);setError(`Error: ${error.message}`);}finally{setLoading(false);}};return/*#__PURE__*/_jsx(Container,{className:\"py-5\",children:/*#__PURE__*/_jsxs(Card,{className:\"mx-auto\",style:{maxWidth:'600px'},children:[/*#__PURE__*/_jsx(Card.Header,{className:\"bg-danger text-white\",children:/*#__PURE__*/_jsx(\"h4\",{className:\"mb-0\",children:\"\\u26A0\\uFE0F Reset de Base de Datos\"})}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Alert,{variant:\"warning\",children:[/*#__PURE__*/_jsx(Alert.Heading,{children:\"\\uD83D\\uDEA8 ADVERTENCIA\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Esta acci\\xF3n eliminar\\xE1 \",/*#__PURE__*/_jsx(\"strong\",{children:\"TODOS\"}),\" los datos de la base de datos:\"]}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Todos los usuarios\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Todos los listings\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Todas las transacciones\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Todas las notificaciones\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Todos los binders\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Todos los ratings\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Esta acci\\xF3n NO se puede deshacer.\"})})]}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),success&&/*#__PURE__*/_jsxs(Alert,{variant:\"success\",children:[/*#__PURE__*/_jsx(Alert.Heading,{children:\"\\uD83C\\uDF89 \\xA1Reset Exitoso!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"La base de datos ha sido limpiada completamente.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Ahora puedes:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Crear una nueva cuenta de usuario\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Crear nuevos listings con la estructura P2P\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Probar el flujo completo de transacciones\"})]})]}),!success&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Para confirmar, escribe: \",/*#__PURE__*/_jsx(\"strong\",{children:\"CONFIRMAR RESET\"})]}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:confirmation,onChange:e=>setConfirmation(e.target.value),placeholder:\"Escribe: CONFIRMAR RESET\",disabled:loading})]}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:handleReset,disabled:loading||confirmation!=='CONFIRMAR RESET',className:\"w-100\",children:loading?'🔄 Ejecutando Reset...':'🗑️ Ejecutar Reset Completo'})]}),loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-2\",children:message}),/*#__PURE__*/_jsx(ProgressBar,{now:progress,label:`${progress}%`})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-muted small\",children:[/*#__PURE__*/_jsx(\"h6\",{children:\"\\uD83D\\uDCCB Qu\\xE9 hace este reset:\"}),/*#__PURE__*/_jsxs(\"ol\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Limpia collections:\"}),\" users, listings, transactions, notifications, ratings, disputes, binders\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Prepara estructuras:\"}),\" Ready para el sistema P2P\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Estado final:\"}),\" Base de datos completamente limpia\"]})]}),/*#__PURE__*/_jsx(\"h6\",{className:\"mt-3\",children:\"\\uD83D\\uDE80 Despu\\xE9s del reset:\"}),/*#__PURE__*/_jsxs(\"ol\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Crear cuenta de usuario nueva\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Crear listings de prueba\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Probar flujo P2P completo\"})]})]})]})]})});}","map":{"version":3,"names":["React","useState","Container","Card","Button","Alert","ProgressBar","Form","resetDatabaseForP2P","cleanDatabase","createInitialStructures","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DatabaseReset","loading","setLoading","progress","setProgress","message","setMessage","error","setError","success","setSuccess","confirmation","setConfirmation","handleReset","console","className","children","style","maxWidth","Header","Body","variant","Heading","Group","Label","Control","type","value","onChange","e","target","placeholder","disabled","onClick","now","label"],"sources":["/home/frodev/Downloads/FroDev-CR-TropicalTCGPlayers/src/pages/DatabaseReset.js"],"sourcesContent":["// src/pages/DatabaseReset.js\n// Página temporal para ejecutar limpieza de base de datos\n\nimport React, { useState } from 'react';\nimport { Container, Card, Button, Alert, ProgressBar, Form } from 'react-bootstrap';\nimport { resetDatabaseForP2P, cleanDatabase, createInitialStructures } from '../scripts/cleanDatabase';\n\nexport default function DatabaseReset() {\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [confirmation, setConfirmation] = useState('');\n\n  const handleReset = async () => {\n    if (confirmation !== 'CONFIRMAR RESET') {\n      setError('Debes escribir \"CONFIRMAR RESET\" para proceder');\n      return;\n    }\n\n    setLoading(true);\n    setProgress(0);\n    setMessage('');\n    setError('');\n    setSuccess(false);\n\n    try {\n      setMessage('🧹 Iniciando limpieza de base de datos...');\n      setProgress(20);\n\n      await cleanDatabase();\n      setMessage('✅ Base de datos limpiada exitosamente');\n      setProgress(60);\n\n      setMessage('🏗️ Creando estructuras iniciales...');\n      await createInitialStructures();\n      setProgress(80);\n\n      setMessage('🎉 Reset completo exitoso!');\n      setProgress(100);\n      setSuccess(true);\n\n    } catch (error) {\n      console.error('Error en reset:', error);\n      setError(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container className=\"py-5\">\n      <Card className=\"mx-auto\" style={{ maxWidth: '600px' }}>\n        <Card.Header className=\"bg-danger text-white\">\n          <h4 className=\"mb-0\">⚠️ Reset de Base de Datos</h4>\n        </Card.Header>\n        <Card.Body>\n          <Alert variant=\"warning\">\n            <Alert.Heading>🚨 ADVERTENCIA</Alert.Heading>\n            <p>\n              Esta acción eliminará <strong>TODOS</strong> los datos de la base de datos:\n            </p>\n            <ul>\n              <li>Todos los usuarios</li>\n              <li>Todos los listings</li>\n              <li>Todas las transacciones</li>\n              <li>Todas las notificaciones</li>\n              <li>Todos los binders</li>\n              <li>Todos los ratings</li>\n            </ul>\n            <p className=\"mb-0\">\n              <strong>Esta acción NO se puede deshacer.</strong>\n            </p>\n          </Alert>\n\n          {error && (\n            <Alert variant=\"danger\">\n              {error}\n            </Alert>\n          )}\n\n          {success && (\n            <Alert variant=\"success\">\n              <Alert.Heading>🎉 ¡Reset Exitoso!</Alert.Heading>\n              <p>La base de datos ha sido limpiada completamente.</p>\n              <p>Ahora puedes:</p>\n              <ul>\n                <li>Crear una nueva cuenta de usuario</li>\n                <li>Crear nuevos listings con la estructura P2P</li>\n                <li>Probar el flujo completo de transacciones</li>\n              </ul>\n            </Alert>\n          )}\n\n          {!success && (\n            <>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>\n                  Para confirmar, escribe: <strong>CONFIRMAR RESET</strong>\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  value={confirmation}\n                  onChange={(e) => setConfirmation(e.target.value)}\n                  placeholder=\"Escribe: CONFIRMAR RESET\"\n                  disabled={loading}\n                />\n              </Form.Group>\n\n              <Button\n                variant=\"danger\"\n                onClick={handleReset}\n                disabled={loading || confirmation !== 'CONFIRMAR RESET'}\n                className=\"w-100\"\n              >\n                {loading ? '🔄 Ejecutando Reset...' : '🗑️ Ejecutar Reset Completo'}\n              </Button>\n            </>\n          )}\n\n          {loading && (\n            <div className=\"mt-3\">\n              <div className=\"mb-2\">{message}</div>\n              <ProgressBar now={progress} label={`${progress}%`} />\n            </div>\n          )}\n\n          <hr />\n          \n          <div className=\"text-muted small\">\n            <h6>📋 Qué hace este reset:</h6>\n            <ol>\n              <li><strong>Limpia collections:</strong> users, listings, transactions, notifications, ratings, disputes, binders</li>\n              <li><strong>Prepara estructuras:</strong> Ready para el sistema P2P</li>\n              <li><strong>Estado final:</strong> Base de datos completamente limpia</li>\n            </ol>\n            \n            <h6 className=\"mt-3\">🚀 Después del reset:</h6>\n            <ol>\n              <li>Crear cuenta de usuario nueva</li>\n              <li>Crear listings de prueba</li>\n              <li>Probar flujo P2P completo</li>\n            </ol>\n          </div>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}