{"ast":null,"code":"// src/contexts/TransactionContext.js\n// Context específico para manejo de transacciones P2P - MIGRADO A BACKEND\nimport{createContext,useContext,useState,useEffect}from'react';import{useAuth}from'./AuthContext';import backendAPI from'../services/backendAPI';import{jsx as _jsx}from\"react/jsx-runtime\";const TransactionContext=/*#__PURE__*/createContext();export function TransactionProvider(_ref){let{children}=_ref;const{user,isAuthenticated}=useAuth();const[transactions,setTransactions]=useState([]);const[buyerTransactions,setBuyerTransactions]=useState([]);const[sellerTransactions,setSellerTransactions]=useState([]);const[loading,setLoading]=useState(true);const[unreadNotifications,setUnreadNotifications]=useState(0);// Cargar transacciones cuando el usuario se autentica\nuseEffect(()=>{if(isAuthenticated&&user){fetchTransactions();}else{setTransactions([]);setBuyerTransactions([]);setSellerTransactions([]);setUnreadNotifications(0);setLoading(false);}},[isAuthenticated,user]);const fetchTransactions=async()=>{try{setLoading(true);const response=await backendAPI.getTransactions();if(response.success){var _response$data;const allTransactions=(((_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.transactions)||[]).map(t=>{var _t$timeline;return{...t,id:t._id,createdAt:new Date(((_t$timeline=t.timeline)===null||_t$timeline===void 0?void 0:_t$timeline.created)||t.createdAt),type:t.buyer.userId===user._id?'buyer':'seller'};});const buyer=allTransactions.filter(t=>t.type==='buyer');const seller=allTransactions.filter(t=>t.type==='seller');setTransactions(allTransactions);setBuyerTransactions(buyer);setSellerTransactions(seller);// TODO: Implementar conteo de notificaciones no leídas\nsetUnreadNotifications(0);}}catch(error){console.error('Error fetching transactions:',error);}setLoading(false);};// Función para crear una nueva transacción\nconst createTransaction=async transactionData=>{try{const response=await backendAPI.createTransaction(transactionData);if(response.success){await fetchTransactions();// Refrescar la lista\nreturn{success:true,transaction:response.transaction};}else{return{success:false,error:response.message};}}catch(error){console.error('Error creating transaction:',error);return{success:false,error:error.message};}};// Función para aceptar una transacción (vendedor)\nconst acceptTransaction=async(transactionId,originStore)=>{try{const response=await backendAPI.acceptTransaction(transactionId,originStore);if(response.success){await fetchTransactions();// Refrescar la lista\nreturn{success:true};}else{return{success:false,error:response.message};}}catch(error){console.error('Error accepting transaction:',error);return{success:false,error:error.message};}};// TODO: Implementar más funciones de transacción según se necesiten\nconst rejectTransaction=async(transactionId,reason)=>{try{// TODO: Implementar endpoint en backend\nconsole.log('Reject transaction:',transactionId,reason);return{success:false,error:'Funcionalidad pendiente de implementar'};}catch(error){console.error('Error rejecting transaction:',error);return{success:false,error:error.message};}};const confirmDelivery=async(transactionId,proofData)=>{try{// TODO: Implementar endpoint en backend\nconsole.log('Confirm delivery:',transactionId,proofData);return{success:false,error:'Funcionalidad pendiente de implementar'};}catch(error){console.error('Error confirming delivery:',error);return{success:false,error:error.message};}};const confirmPayment=async(transactionId,proofData)=>{try{// TODO: Implementar endpoint en backend\nconsole.log('Confirm payment:',transactionId,proofData);return{success:false,error:'Funcionalidad pendiente de implementar'};}catch(error){console.error('Error confirming payment:',error);return{success:false,error:error.message};}};const addRating=async(transactionId,rating,comment)=>{try{// TODO: Implementar endpoint en backend\nconsole.log('Add rating:',transactionId,rating,comment);return{success:false,error:'Funcionalidad pendiente de implementar'};}catch(error){console.error('Error adding rating:',error);return{success:false,error:error.message};}};const value={// Estado\nuser,transactions,buyerTransactions,sellerTransactions,loading,unreadNotifications,// Funciones\nfetchTransactions,createTransaction,acceptTransaction,rejectTransaction,confirmDelivery,confirmPayment,addRating,// Utilidades\nrefreshTransactions:fetchTransactions};return/*#__PURE__*/_jsx(TransactionContext.Provider,{value:value,children:children});}export function useTransactions(){const context=useContext(TransactionContext);if(context===undefined){throw new Error('useTransactions must be used within a TransactionProvider');}return context;}export default TransactionContext;","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useAuth","backendAPI","jsx","_jsx","TransactionContext","TransactionProvider","_ref","children","user","isAuthenticated","transactions","setTransactions","buyerTransactions","setBuyerTransactions","sellerTransactions","setSellerTransactions","loading","setLoading","unreadNotifications","setUnreadNotifications","fetchTransactions","response","getTransactions","success","_response$data","allTransactions","data","map","t","_t$timeline","id","_id","createdAt","Date","timeline","created","type","buyer","userId","filter","seller","error","console","createTransaction","transactionData","transaction","message","acceptTransaction","transactionId","originStore","rejectTransaction","reason","log","confirmDelivery","proofData","confirmPayment","addRating","rating","comment","value","refreshTransactions","Provider","useTransactions","context","undefined","Error"],"sources":["/home/frodev/Downloads/FroDev-CR-TropicalTCGPlayers/src/contexts/TransactionContext.js"],"sourcesContent":["// src/contexts/TransactionContext.js\n// Context específico para manejo de transacciones P2P - MIGRADO A BACKEND\n\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport backendAPI from '../services/backendAPI';\n\nconst TransactionContext = createContext();\n\nexport function TransactionProvider({ children }) {\n  const { user, isAuthenticated } = useAuth();\n  const [transactions, setTransactions] = useState([]);\n  const [buyerTransactions, setBuyerTransactions] = useState([]);\n  const [sellerTransactions, setSellerTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [unreadNotifications, setUnreadNotifications] = useState(0);\n\n  // Cargar transacciones cuando el usuario se autentica\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      fetchTransactions();\n    } else {\n      setTransactions([]);\n      setBuyerTransactions([]);\n      setSellerTransactions([]);\n      setUnreadNotifications(0);\n      setLoading(false);\n    }\n  }, [isAuthenticated, user]);\n\n  const fetchTransactions = async () => {\n    try {\n      setLoading(true);\n      const response = await backendAPI.getTransactions();\n      \n      if (response.success) {\n        const allTransactions = (response.data?.transactions || []).map(t => ({\n          ...t,\n          id: t._id,\n          createdAt: new Date(t.timeline?.created || t.createdAt),\n          type: t.buyer.userId === user._id ? 'buyer' : 'seller'\n        }));\n        \n        const buyer = allTransactions.filter(t => t.type === 'buyer');\n        const seller = allTransactions.filter(t => t.type === 'seller');\n        \n        setTransactions(allTransactions);\n        setBuyerTransactions(buyer);\n        setSellerTransactions(seller);\n        \n        // TODO: Implementar conteo de notificaciones no leídas\n        setUnreadNotifications(0);\n      }\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n    setLoading(false);\n  };\n\n  // Función para crear una nueva transacción\n  const createTransaction = async (transactionData) => {\n    try {\n      const response = await backendAPI.createTransaction(transactionData);\n      \n      if (response.success) {\n        await fetchTransactions(); // Refrescar la lista\n        return { success: true, transaction: response.transaction };\n      } else {\n        return { success: false, error: response.message };\n      }\n    } catch (error) {\n      console.error('Error creating transaction:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  // Función para aceptar una transacción (vendedor)\n  const acceptTransaction = async (transactionId, originStore) => {\n    try {\n      const response = await backendAPI.acceptTransaction(transactionId, originStore);\n      \n      if (response.success) {\n        await fetchTransactions(); // Refrescar la lista\n        return { success: true };\n      } else {\n        return { success: false, error: response.message };\n      }\n    } catch (error) {\n      console.error('Error accepting transaction:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  // TODO: Implementar más funciones de transacción según se necesiten\n  const rejectTransaction = async (transactionId, reason) => {\n    try {\n      // TODO: Implementar endpoint en backend\n      console.log('Reject transaction:', transactionId, reason);\n      return { success: false, error: 'Funcionalidad pendiente de implementar' };\n    } catch (error) {\n      console.error('Error rejecting transaction:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const confirmDelivery = async (transactionId, proofData) => {\n    try {\n      // TODO: Implementar endpoint en backend\n      console.log('Confirm delivery:', transactionId, proofData);\n      return { success: false, error: 'Funcionalidad pendiente de implementar' };\n    } catch (error) {\n      console.error('Error confirming delivery:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const confirmPayment = async (transactionId, proofData) => {\n    try {\n      // TODO: Implementar endpoint en backend\n      console.log('Confirm payment:', transactionId, proofData);\n      return { success: false, error: 'Funcionalidad pendiente de implementar' };\n    } catch (error) {\n      console.error('Error confirming payment:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const addRating = async (transactionId, rating, comment) => {\n    try {\n      // TODO: Implementar endpoint en backend\n      console.log('Add rating:', transactionId, rating, comment);\n      return { success: false, error: 'Funcionalidad pendiente de implementar' };\n    } catch (error) {\n      console.error('Error adding rating:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const value = {\n    // Estado\n    user,\n    transactions,\n    buyerTransactions,\n    sellerTransactions,\n    loading,\n    unreadNotifications,\n    \n    // Funciones\n    fetchTransactions,\n    createTransaction,\n    acceptTransaction,\n    rejectTransaction,\n    confirmDelivery,\n    confirmPayment,\n    addRating,\n    \n    // Utilidades\n    refreshTransactions: fetchTransactions\n  };\n\n  return (\n    <TransactionContext.Provider value={value}>\n      {children}\n    </TransactionContext.Provider>\n  );\n}\n\nexport function useTransactions() {\n  const context = useContext(TransactionContext);\n  if (context === undefined) {\n    throw new Error('useTransactions must be used within a TransactionProvider');\n  }\n  return context;\n}\n\nexport default TransactionContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}