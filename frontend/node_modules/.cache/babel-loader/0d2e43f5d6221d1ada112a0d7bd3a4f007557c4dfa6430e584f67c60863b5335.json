{"ast":null,"code":"// src/contexts/CartContext.js\nimport React,{createContext,useContext,useState,useEffect}from'react';import apiClient from'../services/api';import{useAuth}from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext();export function CartProvider(_ref){let{children}=_ref;const[cart,setCart]=useState([]);const[loading,setLoading]=useState(true);// Usar useAuth de forma segura - hooks deben llamarse directamente\nlet user=null;let isAuthenticated=false;try{const auth=useAuth();user=auth.user;isAuthenticated=auth.isAuthenticated;}catch(error){// AuthContext no disponible, usar valores por defecto\nconsole.log('AuthContext no disponible, usando valores por defecto');}// Cargar carrito cuando el usuario cambie\nuseEffect(()=>{if(isAuthenticated&&user){loadUserCart();}else{// Usuario no autenticado, carrito vacío\nsetCart([]);setLoading(false);}},[isAuthenticated,user]);const loadUserCart=async()=>{setLoading(true);try{// Por ahora usamos localStorage, luego se puede implementar endpoint de carrito\nconst savedCart=localStorage.getItem(`cart_${user.id}`);if(savedCart){setCart(JSON.parse(savedCart));}else{setCart([]);}}catch(error){console.error('Error cargando carrito:',error);setCart([]);}setLoading(false);};const saveCart=newCart=>{if(user){localStorage.setItem(`cart_${user.id}`,JSON.stringify(newCart));}};// Función para agregar al carrito\nconst addToCart=async function(listing){let requestedQuantity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;try{console.log('🛒 Intentando agregar al carrito:',listing===null||listing===void 0?void 0:listing.cardName,'ID:',(listing===null||listing===void 0?void 0:listing.id)||(listing===null||listing===void 0?void 0:listing.listingId),'Cantidad:',requestedQuantity);// Normalizar el ID del listing\nconst listingId=listing.id||listing.listingId;if(!listing||!listingId){console.error('❌ Listing inválido:',listing);alert('No se puede agregar al carrito: Datos de carta inválidos');return false;}// Verificar disponibilidad\nconst availability=await checkListingAvailability(listingId,requestedQuantity);if(!availability.available){console.log('❌ No disponible:',availability.reason);alert(`No se puede agregar al carrito: ${availability.reason}`);return false;}// Verificar si ya está en el carrito\nlet existingItemIndex=-1;if(!Array.isArray(cart)){console.error('❌ Carrito no es un array:',cart);setCart([]);}else{existingItemIndex=cart.findIndex(item=>item&&(item.id===listingId||item.listingId===listingId));}let newCart;if(existingItemIndex>=0){// Si ya existe, verificar si la nueva cantidad total no excede la disponible\nconst currentQuantityInCart=cart[existingItemIndex].quantity||1;const totalQuantity=currentQuantityInCart+requestedQuantity;if(totalQuantity>availability.availableQuantity){alert(`Solo puedes agregar ${availability.availableQuantity-currentQuantityInCart} unidades más de esta carta`);return false;}newCart=[...cart];newCart[existingItemIndex].quantity=totalQuantity;}else{var _listing$images,_listing$sellerId,_listing$sellerId2,_listing$sellerId3;// Agregar nuevo item\nconst cartItem={id:listingId,listingId:listingId,cardId:listing.cardId||listing.id,cardName:listing.cardName||listing.name,cardImage:listing.cardImage||((_listing$images=listing.images)===null||_listing$images===void 0?void 0:_listing$images.small),price:listing.price,condition:listing.condition,quantity:requestedQuantity,sellerId:((_listing$sellerId=listing.sellerId)===null||_listing$sellerId===void 0?void 0:_listing$sellerId._id)||listing.sellerId,sellerName:((_listing$sellerId2=listing.sellerId)===null||_listing$sellerId2===void 0?void 0:_listing$sellerId2.username)||listing.sellerName,userPhone:((_listing$sellerId3=listing.sellerId)===null||_listing$sellerId3===void 0?void 0:_listing$sellerId3.phone)||listing.userPhone,setName:listing.setName,rarity:listing.rarity,tcgType:listing.tcgType,maxQuantity:availability.availableQuantity};newCart=[...cart,cartItem];}setCart(newCart);saveCart(newCart);console.log('✅ Agregado al carrito exitosamente');return true;}catch(error){console.error('❌ Error agregando al carrito:',error);alert('Error agregando al carrito. Inténtalo de nuevo.');return false;}};// Función para remover del carrito\nconst removeFromCart=async listingId=>{try{const newCart=cart.filter(item=>item.id!==listingId&&item.listingId!==listingId);setCart(newCart);saveCart(newCart);return true;}catch(error){console.error('Error removiendo del carrito:',error);return false;}};// Función para limpiar carrito\nconst clearCart=async()=>{try{setCart([]);saveCart([]);return true;}catch(error){console.error('Error limpiando carrito:',error);return false;}};// Función para actualizar cantidad\nconst updateCartItemQuantity=async(listingId,newQuantity)=>{try{if(newQuantity<=0){return await removeFromCart(listingId);}const newCart=cart.map(item=>{if(item.id===listingId||item.listingId===listingId){return{...item,quantity:newQuantity};}return item;});setCart(newCart);saveCart(newCart);return true;}catch(error){console.error('Error actualizando cantidad:',error);return false;}};// Función para verificar disponibilidad\nconst checkListingAvailability=async function(listingId){let requestedQuantity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;try{console.log('🔍 Verificando disponibilidad para listing:',listingId,'cantidad:',requestedQuantity);const response=await apiClient.get(`/api/v1/listings/${listingId}`);if(!response.data.success){console.log('❌ Listing no existe:',listingId);return{available:false,reason:'El listado no existe'};}const listingData=response.data.listing;console.log('📦 Datos del listing:',listingData);const availableQuantity=listingData.availableQuantity||listingData.quantity||0;const status=listingData.status||'active';console.log('📊 Estado:',status,'Disponible:',availableQuantity,'Solicitado:',requestedQuantity);if(status==='inactive'){return{available:false,reason:'El listado está inactivo'};}if(status==='sold_out'||availableQuantity===0){return{available:false,reason:'Producto agotado'};}if(availableQuantity<requestedQuantity){return{available:false,reason:`Solo hay ${availableQuantity} unidad${availableQuantity>1?'es':''} disponible${availableQuantity>1?'s':''}`,availableQuantity};}return{available:true,availableQuantity,listing:listingData};}catch(error){console.error('❌ Error verificando disponibilidad:',error);return{available:false,reason:'Error verificando disponibilidad'};}};// Funciones de cálculo\nconst getTotalItems=()=>{return cart.reduce((total,item)=>total+(item.quantity||1),0);};const getTotalPrice=()=>{return cart.reduce((total,item)=>total+item.price*(item.quantity||1),0);};// Obtener items del carrito agrupados por vendedor\nconst getCartByVendor=()=>{const vendors={};cart.forEach(item=>{const vendorId=item.sellerId;if(!vendors[vendorId]){vendors[vendorId]={vendorId,vendorName:item.sellerName,items:[],totalAmount:0};}vendors[vendorId].items.push(item);vendors[vendorId].totalAmount+=item.price*(item.quantity||1);});return vendors;};const value={cart,loading,user,addToCart,removeFromCart,clearCart,updateCartItemQuantity,checkListingAvailability,getTotalItems,getTotalPrice,getCartByVendor};return/*#__PURE__*/_jsx(CartContext.Provider,{value:value,children:children});}export function useCart(){const context=useContext(CartContext);if(context===undefined){throw new Error('useCart must be used within a CartProvider');}return context;}export default CartContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiClient","useAuth","jsx","_jsx","CartContext","CartProvider","_ref","children","cart","setCart","loading","setLoading","user","isAuthenticated","auth","error","console","log","loadUserCart","savedCart","localStorage","getItem","id","JSON","parse","saveCart","newCart","setItem","stringify","addToCart","listing","requestedQuantity","arguments","length","undefined","cardName","listingId","alert","availability","checkListingAvailability","available","reason","existingItemIndex","Array","isArray","findIndex","item","currentQuantityInCart","quantity","totalQuantity","availableQuantity","_listing$images","_listing$sellerId","_listing$sellerId2","_listing$sellerId3","cartItem","cardId","name","cardImage","images","small","price","condition","sellerId","_id","sellerName","username","userPhone","phone","setName","rarity","tcgType","maxQuantity","removeFromCart","filter","clearCart","updateCartItemQuantity","newQuantity","map","response","get","data","success","listingData","status","getTotalItems","reduce","total","getTotalPrice","getCartByVendor","vendors","forEach","vendorId","vendorName","items","totalAmount","push","value","Provider","useCart","context","Error"],"sources":["/home/frodev/Downloads/FroDev-CR-TropicalTCGPlayers/src/contexts/CartContext.js"],"sourcesContent":["// src/contexts/CartContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport apiClient from '../services/api';\nimport { useAuth } from './AuthContext';\n\nconst CartContext = createContext();\n\nexport function CartProvider({ children }) {\n  const [cart, setCart] = useState([]);\n  const [loading, setLoading] = useState(true);\n  \n  // Usar useAuth de forma segura - hooks deben llamarse directamente\n  let user = null;\n  let isAuthenticated = false;\n  \n  try {\n    const auth = useAuth();\n    user = auth.user;\n    isAuthenticated = auth.isAuthenticated;\n  } catch (error) {\n    // AuthContext no disponible, usar valores por defecto\n    console.log('AuthContext no disponible, usando valores por defecto');\n  }\n\n  // Cargar carrito cuando el usuario cambie\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      loadUserCart();\n    } else {\n      // Usuario no autenticado, carrito vacío\n      setCart([]);\n      setLoading(false);\n    }\n  }, [isAuthenticated, user]);\n\n  const loadUserCart = async () => {\n    setLoading(true);\n    try {\n      // Por ahora usamos localStorage, luego se puede implementar endpoint de carrito\n      const savedCart = localStorage.getItem(`cart_${user.id}`);\n      if (savedCart) {\n        setCart(JSON.parse(savedCart));\n      } else {\n        setCart([]);\n      }\n    } catch (error) {\n      console.error('Error cargando carrito:', error);\n      setCart([]);\n    }\n    setLoading(false);\n  };\n\n  const saveCart = (newCart) => {\n    if (user) {\n      localStorage.setItem(`cart_${user.id}`, JSON.stringify(newCart));\n    }\n  };\n\n  // Función para agregar al carrito\n  const addToCart = async (listing, requestedQuantity = 1) => {\n    try {\n      console.log('🛒 Intentando agregar al carrito:', listing?.cardName, 'ID:', listing?.id || listing?.listingId, 'Cantidad:', requestedQuantity);\n      \n      // Normalizar el ID del listing\n      const listingId = listing.id || listing.listingId;\n      \n      if (!listing || !listingId) {\n        console.error('❌ Listing inválido:', listing);\n        alert('No se puede agregar al carrito: Datos de carta inválidos');\n        return false;\n      }\n      \n      // Verificar disponibilidad\n      const availability = await checkListingAvailability(listingId, requestedQuantity);\n      \n      if (!availability.available) {\n        console.log('❌ No disponible:', availability.reason);\n        alert(`No se puede agregar al carrito: ${availability.reason}`);\n        return false;\n      }\n\n      // Verificar si ya está en el carrito\n      let existingItemIndex = -1;\n      if (!Array.isArray(cart)) {\n        console.error('❌ Carrito no es un array:', cart);\n        setCart([]);\n      } else {\n        existingItemIndex = cart.findIndex(item => item && (item.id === listingId || item.listingId === listingId));\n      }\n      \n      let newCart;\n      \n      if (existingItemIndex >= 0) {\n        // Si ya existe, verificar si la nueva cantidad total no excede la disponible\n        const currentQuantityInCart = cart[existingItemIndex].quantity || 1;\n        const totalQuantity = currentQuantityInCart + requestedQuantity;\n        \n        if (totalQuantity > availability.availableQuantity) {\n          alert(`Solo puedes agregar ${availability.availableQuantity - currentQuantityInCart} unidades más de esta carta`);\n          return false;\n        }\n        \n        newCart = [...cart];\n        newCart[existingItemIndex].quantity = totalQuantity;\n      } else {\n        // Agregar nuevo item\n        const cartItem = {\n          id: listingId,\n          listingId: listingId,\n          cardId: listing.cardId || listing.id,\n          cardName: listing.cardName || listing.name,\n          cardImage: listing.cardImage || listing.images?.small,\n          price: listing.price,\n          condition: listing.condition,\n          quantity: requestedQuantity,\n          sellerId: listing.sellerId?._id || listing.sellerId,\n          sellerName: listing.sellerId?.username || listing.sellerName,\n          userPhone: listing.sellerId?.phone || listing.userPhone,\n          setName: listing.setName,\n          rarity: listing.rarity,\n          tcgType: listing.tcgType,\n          maxQuantity: availability.availableQuantity\n        };\n        \n        newCart = [...cart, cartItem];\n      }\n      \n      setCart(newCart);\n      saveCart(newCart);\n      \n      console.log('✅ Agregado al carrito exitosamente');\n      return true;\n      \n    } catch (error) {\n      console.error('❌ Error agregando al carrito:', error);\n      alert('Error agregando al carrito. Inténtalo de nuevo.');\n      return false;\n    }\n  };\n\n  // Función para remover del carrito\n  const removeFromCart = async (listingId) => {\n    try {\n      const newCart = cart.filter(item => \n        item.id !== listingId && item.listingId !== listingId\n      );\n      setCart(newCart);\n      saveCart(newCart);\n      return true;\n    } catch (error) {\n      console.error('Error removiendo del carrito:', error);\n      return false;\n    }\n  };\n\n  // Función para limpiar carrito\n  const clearCart = async () => {\n    try {\n      setCart([]);\n      saveCart([]);\n      return true;\n    } catch (error) {\n      console.error('Error limpiando carrito:', error);\n      return false;\n    }\n  };\n\n  // Función para actualizar cantidad\n  const updateCartItemQuantity = async (listingId, newQuantity) => {\n    try {\n      if (newQuantity <= 0) {\n        return await removeFromCart(listingId);\n      }\n      \n      const newCart = cart.map(item => {\n        if (item.id === listingId || item.listingId === listingId) {\n          return { ...item, quantity: newQuantity };\n        }\n        return item;\n      });\n      \n      setCart(newCart);\n      saveCart(newCart);\n      return true;\n    } catch (error) {\n      console.error('Error actualizando cantidad:', error);\n      return false;\n    }\n  };\n\n  // Función para verificar disponibilidad\n  const checkListingAvailability = async (listingId, requestedQuantity = 1) => {\n    try {\n      console.log('🔍 Verificando disponibilidad para listing:', listingId, 'cantidad:', requestedQuantity);\n      \n      const response = await apiClient.get(`/api/v1/listings/${listingId}`);\n      \n      if (!response.data.success) {\n        console.log('❌ Listing no existe:', listingId);\n        return { available: false, reason: 'El listado no existe' };\n      }\n\n      const listingData = response.data.listing;\n      console.log('📦 Datos del listing:', listingData);\n      \n      const availableQuantity = listingData.availableQuantity || listingData.quantity || 0;\n      const status = listingData.status || 'active';\n      \n      console.log('📊 Estado:', status, 'Disponible:', availableQuantity, 'Solicitado:', requestedQuantity);\n      \n      if (status === 'inactive') {\n        return { available: false, reason: 'El listado está inactivo' };\n      }\n      \n      if (status === 'sold_out' || availableQuantity === 0) {\n        return { available: false, reason: 'Producto agotado' };\n      }\n      \n      if (availableQuantity < requestedQuantity) {\n        return { \n          available: false, \n          reason: `Solo hay ${availableQuantity} unidad${availableQuantity > 1 ? 'es' : ''} disponible${availableQuantity > 1 ? 's' : ''}`,\n          availableQuantity \n        };\n      }\n      \n      return { \n        available: true, \n        availableQuantity,\n        listing: listingData \n      };\n      \n    } catch (error) {\n      console.error('❌ Error verificando disponibilidad:', error);\n      return { \n        available: false, \n        reason: 'Error verificando disponibilidad' \n      };\n    }\n  };\n\n  // Funciones de cálculo\n  const getTotalItems = () => {\n    return cart.reduce((total, item) => total + (item.quantity || 1), 0);\n  };\n\n  const getTotalPrice = () => {\n    return cart.reduce((total, item) => total + (item.price * (item.quantity || 1)), 0);\n  };\n\n  // Obtener items del carrito agrupados por vendedor\n  const getCartByVendor = () => {\n    const vendors = {};\n    \n    cart.forEach(item => {\n      const vendorId = item.sellerId;\n      if (!vendors[vendorId]) {\n        vendors[vendorId] = {\n          vendorId,\n          vendorName: item.sellerName,\n          items: [],\n          totalAmount: 0\n        };\n      }\n      vendors[vendorId].items.push(item);\n      vendors[vendorId].totalAmount += item.price * (item.quantity || 1);\n    });\n    \n    return vendors;\n  };\n\n  const value = {\n    cart,\n    loading,\n    user,\n    addToCart,\n    removeFromCart,\n    clearCart,\n    updateCartItemQuantity,\n    checkListingAvailability,\n    getTotalItems,\n    getTotalPrice,\n    getCartByVendor\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n}\n\nexport function useCart() {\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}\n\nexport default CartContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}