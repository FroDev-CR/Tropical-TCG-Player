{"ast":null,"code":"var _jsxFileName = \"/home/frodev/Downloads/FroDev-CR-TropicalTCGPlayers/src/pages/Marketplace.js\",\n  _s = $RefreshSig$();\n// src/pages/Marketplace.js\nimport { useState, useEffect, useCallback } from 'react';\nimport { Container, Row, Col, Card, Form, Spinner, Button, Pagination, Alert } from 'react-bootstrap';\nimport apiClient from '../services/api';\nimport { motion } from 'framer-motion';\nimport { useCart } from '../contexts/CartContext';\nimport { useAuthActions } from '../hooks/useAuthActions';\nimport SellCardModal from '../components/SellCardModal';\nimport MarketplaceFilters from '../components/MarketplaceFilters';\nimport FeaturedSections from '../components/FeaturedSections';\nimport CardDetailModalOptimized from '../components/CardDetailModalOptimized';\nimport FloatingCart from '../components/FloatingCart';\nimport { FaShoppingCart, FaWhatsapp, FaHeart, FaSearch, FaFilter } from 'react-icons/fa';\nimport apiSearchService from '../services/apiSearchService';\n\n// Configuración simple para mapear tipos de TCG\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TCG_GAMES = {\n  pokemon: {\n    name: 'Pokémon TCG'\n  },\n  onepiece: {\n    name: 'One Piece'\n  },\n  dragonball: {\n    name: 'Dragon Ball'\n  },\n  digimon: {\n    name: 'Digimon'\n  },\n  magic: {\n    name: 'Magic: The Gathering'\n  },\n  unionarena: {\n    name: 'Union Arena'\n  },\n  gundam: {\n    name: 'Gundam'\n  },\n  unknown: {\n    name: 'Desconocido'\n  }\n};\n\n// Utility functions moved to CardDetailModal for better organization\n\nexport default function Marketplace() {\n  _s();\n  var _TCG_GAMES$selectedTC2, _TCG_GAMES$selectedTC3;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedTCG, setSelectedTCG] = useState('');\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const [showSellModal, setShowSellModal] = useState(false);\n  const [debounceTimer, setDebounceTimer] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [showCardModal, setShowCardModal] = useState(false);\n  const [searchError, setSearchError] = useState('');\n\n  // Nuevos estados para las funcionalidades mejoradas\n  const [showFilters, setShowFilters] = useState(false);\n  const [filters, setFilters] = useState({\n    tcgTypes: [],\n    priceRange: null,\n    conditions: [],\n    rarities: [],\n    minRating: 0,\n    sortBy: 'newest'\n  });\n  const {\n    addToCart\n  } = useCart();\n  const {\n    protectedAction\n  } = useAuthActions();\n  const [latestListings, setLatestListings] = useState([]);\n\n  // Función para aplicar filtros avanzados (actualizada para cartas unificadas)\n  const applyFilters = (cards, activeFilters) => {\n    let filtered = [...cards];\n\n    // Filtro por TCG Types\n    if (activeFilters.tcgTypes.length > 0) {\n      filtered = filtered.filter(card => activeFilters.tcgTypes.includes(card.tcgType));\n    }\n\n    // Filtro por precio (basado en precio promedio de la carta)\n    if (activeFilters.priceRange) {\n      const priceRanges = {\n        'under10': {\n          min: 0,\n          max: 10\n        },\n        '10to25': {\n          min: 10,\n          max: 25\n        },\n        '25to50': {\n          min: 25,\n          max: 50\n        },\n        '50to100': {\n          min: 50,\n          max: 100\n        },\n        'over100': {\n          min: 100,\n          max: 9999\n        }\n      };\n      const range = priceRanges[activeFilters.priceRange];\n      if (range) {\n        filtered = filtered.filter(card => {\n          const price = card.averagePrice || card.minPrice || 0;\n          return price >= range.min && price <= range.max;\n        });\n      }\n    }\n\n    // Filtro por condición (si tiene vendedores con esa condición)\n    if (activeFilters.conditions.length > 0) {\n      filtered = filtered.filter(card => card.sellers && card.sellers.some(seller => activeFilters.conditions.includes(seller.condition)));\n    }\n\n    // Filtro por rareza\n    if (activeFilters.rarities.length > 0) {\n      filtered = filtered.filter(card => activeFilters.rarities.includes(card.rarity));\n    }\n\n    // Filtro por rating mínimo del vendedor (simulado)\n    if (activeFilters.minRating > 0) {\n      // Por ahora simulamos el rating, después se puede implementar con datos reales\n      filtered = filtered.filter(() => Math.random() > activeFilters.minRating / 5 - 0.3);\n    }\n\n    // Filtro adicional: solo cartas con vendedores\n    const onlyWithSellers = activeFilters.onlyWithSellers || false;\n    if (onlyWithSellers) {\n      filtered = filtered.filter(card => card.sellers && card.sellers.length > 0);\n    }\n\n    // Ordenamiento\n    switch (activeFilters.sortBy) {\n      case 'price-low':\n        filtered.sort((a, b) => (a.minPrice || 0) - (b.minPrice || 0));\n        break;\n      case 'price-high':\n        filtered.sort((a, b) => (b.maxPrice || 0) - (a.maxPrice || 0));\n        break;\n      case 'name-az':\n        filtered.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n      case 'name-za':\n        filtered.sort((a, b) => b.name.localeCompare(a.name));\n        break;\n      case 'sellers-most':\n        filtered.sort((a, b) => {\n          var _b$sellers, _a$sellers;\n          return (((_b$sellers = b.sellers) === null || _b$sellers === void 0 ? void 0 : _b$sellers.length) || 0) - (((_a$sellers = a.sellers) === null || _a$sellers === void 0 ? void 0 : _a$sellers.length) || 0);\n        });\n        break;\n      case 'sellers-least':\n        filtered.sort((a, b) => {\n          var _a$sellers2, _b$sellers2;\n          return (((_a$sellers2 = a.sellers) === null || _a$sellers2 === void 0 ? void 0 : _a$sellers2.length) || 0) - (((_b$sellers2 = b.sellers) === null || _b$sellers2 === void 0 ? void 0 : _b$sellers2.length) || 0);\n        });\n        break;\n      case 'newest':\n      default:\n        // Ordenar por carta más reciente (basado en el listing más reciente)\n        filtered.sort((a, b) => {\n          var _a$sellers3, _b$sellers3;\n          const aLatest = ((_a$sellers3 = a.sellers) === null || _a$sellers3 === void 0 ? void 0 : _a$sellers3.length) > 0 ? Math.max(...a.sellers.map(s => {\n            var _s$createdAt;\n            return ((_s$createdAt = s.createdAt) === null || _s$createdAt === void 0 ? void 0 : _s$createdAt.seconds) || 0;\n          })) : 0;\n          const bLatest = ((_b$sellers3 = b.sellers) === null || _b$sellers3 === void 0 ? void 0 : _b$sellers3.length) > 0 ? Math.max(...b.sellers.map(s => {\n            var _s$createdAt2;\n            return ((_s$createdAt2 = s.createdAt) === null || _s$createdAt2 === void 0 ? void 0 : _s$createdAt2.seconds) || 0;\n          })) : 0;\n          return bLatest - aLatest;\n        });\n        break;\n    }\n    return filtered;\n  };\n\n  // Contar filtros activos\n  const getActiveFiltersCount = () => {\n    let count = 0;\n    if (filters.tcgTypes.length > 0) count++;\n    if (filters.priceRange) count++;\n    if (filters.conditions.length > 0) count++;\n    if (filters.rarities.length > 0) count++;\n    if (filters.minRating > 0) count++;\n    if (filters.sortBy !== 'newest') count++;\n    return count;\n  };\n  useEffect(() => {\n    const fetchLatestListings = async () => {\n      try {\n        const latestQuery = query(collection(db, 'listings'), orderBy('createdAt', 'desc'), limit(15));\n        const querySnapshot = await getDocs(latestQuery);\n        setLatestListings(querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })));\n      } catch (error) {\n        console.error('Error al obtener últimas cartas publicadas:', error);\n      }\n    };\n    if (!searchTerm.trim()) {\n      fetchLatestListings();\n    }\n  }, [searchTerm]);\n\n  // Función simplificada - buscar en una sola API según el TCG seleccionado\n  const searchCardsUnified = async (searchTerm, selectedTcg, page = 1, pageSize = 12) => {\n    const sanitizedTerm = searchTerm.trim().toLowerCase().replace(/[^a-z0-9\\s\\-']/g, '').replace(/\\s+/g, ' ');\n    console.log(`🔍 Búsqueda en ${selectedTcg}: \"${sanitizedTerm}\"`);\n    try {\n      // Buscar en la API específica seleccionada\n      const apiResults = await apiSearchService.searchSpecificAPI(selectedTcg, sanitizedTerm, page, Math.max(pageSize, 50) // Aumentar minídmo a 50 cartas\n      );\n\n      // Buscar vendedores locales en paralelo\n      const localSellers = await searchLocalSellers(sanitizedTerm);\n\n      // Función para formatear información del set\n      const formatSetInfo = set => {\n        if (!set) return 'Set desconocido';\n        if (typeof set === 'string') return set;\n        if (typeof set === 'object' && set !== null) {\n          const name = set.name || '';\n          const series = set.series || '';\n          if (name && series) return `${name}, ${series}`;else if (name) return name;else if (series) return series;else return 'Set desconocido';\n        }\n        return String(set);\n      };\n\n      // Combinar resultados: agregar vendedores locales a las cartas de API\n      const enrichedCards = apiResults.cards.map(card => {\n        const cardSellers = localSellers.filter(seller => seller.cardId === card.id || seller.cardName.toLowerCase().trim() === card.name.toLowerCase().trim());\n        return {\n          ...card,\n          // Formatear el objeto set correctamente\n          set: {\n            name: formatSetInfo(card.set)\n          },\n          sellers: cardSellers,\n          hasLocalSellers: cardSellers.length > 0\n        };\n      });\n      return {\n        cards: enrichedCards,\n        totalResults: apiResults.totalResults,\n        errors: apiResults.errors || [],\n        page: apiResults.page,\n        totalPages: apiResults.totalPages\n      };\n    } catch (error) {\n      console.error('Error en búsqueda específica:', error);\n      // Fallback: buscar solo en vendedores locales\n      const localResults = await searchLocalSellers(sanitizedTerm);\n      return {\n        cards: convertListingsToCards(localResults),\n        totalResults: localResults.length,\n        errors: [{\n          api: 'Specific',\n          error: `API de ${selectedTcg} falló, mostrando solo vendedores locales`\n        }]\n      };\n    }\n  };\n\n  // Buscar solo en vendedores locales\n  const searchLocalSellers = async searchTerm => {\n    try {\n      const listingsQuery = query(collection(db, 'listings'), where('status', '==', 'active'), orderBy('createdAt', 'desc'), limit(100));\n      const listingsSnapshot = await getDocs(listingsQuery);\n      let allListings = listingsSnapshot.docs.map(d => ({\n        id: d.id,\n        ...d.data()\n      }));\n\n      // Filtrar por término de búsqueda\n      if (searchTerm) {\n        allListings = allListings.filter(listing => listing.cardName && listing.cardName.toLowerCase().includes(searchTerm.toLowerCase()));\n      }\n      return allListings;\n    } catch (error) {\n      console.error('Error buscando vendedores locales:', error);\n      return [];\n    }\n  };\n\n  // Convertir listings a formato de cartas\n  const convertListingsToCards = listings => {\n    const cardMap = new Map();\n    listings.forEach(listing => {\n      const cardId = listing.cardId || listing.id;\n      if (!cardMap.has(cardId)) {\n        var _TCG_GAMES$listing$tc;\n        cardMap.set(cardId, {\n          id: cardId,\n          name: listing.cardName,\n          images: {\n            small: listing.cardImage,\n            large: listing.cardImage\n          },\n          set: {\n            name: listing.setName || 'Desconocido'\n          },\n          rarity: listing.rarity || 'Sin rareza',\n          tcgType: listing.tcgType || 'unknown',\n          tcgName: ((_TCG_GAMES$listing$tc = TCG_GAMES[listing.tcgType]) === null || _TCG_GAMES$listing$tc === void 0 ? void 0 : _TCG_GAMES$listing$tc.name) || 'Desconocido',\n          sellers: [],\n          hasLocalSellers: true\n        });\n      }\n      const card = cardMap.get(cardId);\n      card.sellers.push({\n        listingId: listing.id,\n        sellerId: listing.sellerId,\n        sellerName: listing.sellerName,\n        price: listing.price,\n        condition: listing.condition,\n        quantity: listing.availableQuantity || listing.quantity || 1,\n        createdAt: listing.createdAt,\n        userPhone: listing.userPhone\n      });\n    });\n    return Array.from(cardMap.values());\n  };\n\n  // Función de búsqueda específica por TCG\n  const performSearch = useCallback(async (term, page = 1) => {\n    if (!term.trim()) {\n      setCards([]);\n      setTotalResults(0);\n      setTotalPages(1);\n      setCurrentPage(1);\n      return;\n    }\n    if (!selectedTCG) {\n      setSearchError('⚠️ Selecciona un TCG antes de buscar');\n      return;\n    }\n    setLoading(true);\n    setSearchError('');\n    try {\n      // Búsqueda específica en el TCG seleccionado + vendedores locales  \n      const searchResults = await searchCardsUnified(term, selectedTCG, page, 48); // Aumentar a 48 cartas por página\n\n      // Procesar cartas y calcular precios de vendedores\n      const processedCards = searchResults.cards.map(card => {\n        if (card.sellers && card.sellers.length > 0) {\n          const prices = card.sellers.map(s => s.price);\n          const quantities = card.sellers.map(s => s.quantity);\n          card.minPrice = Math.min(...prices);\n          card.maxPrice = Math.max(...prices);\n          card.totalStock = quantities.reduce((sum, q) => sum + q, 0);\n          const totalWeightedPrice = card.sellers.reduce((sum, seller) => {\n            return sum + seller.price * seller.quantity;\n          }, 0);\n          card.averagePrice = totalWeightedPrice / card.totalStock;\n\n          // Ordenar vendedores por precio\n          card.sellers.sort((a, b) => a.price - b.price);\n        }\n        return card;\n      });\n\n      // Aplicar filtros locales\n      let finalCards = applyFilters(processedCards, filters);\n      setCards(finalCards);\n      setTotalResults(searchResults.totalResults);\n      setTotalPages(searchResults.totalPages || Math.ceil(finalCards.length / 48));\n      setCurrentPage(page);\n\n      // Mostrar información sobre el estado de los datos\n      if (searchResults.errors && searchResults.errors.length > 0) {\n        const errorMessages = searchResults.errors.map(err => `${err.api}: ${err.error}`).join('; ');\n        setSearchError(`⚠️ ${errorMessages}`);\n      }\n      if (finalCards.length === 0) {\n        var _TCG_GAMES$selectedTC;\n        setSearchError(`No se encontraron cartas de ${((_TCG_GAMES$selectedTC = TCG_GAMES[selectedTCG]) === null || _TCG_GAMES$selectedTC === void 0 ? void 0 : _TCG_GAMES$selectedTC.name) || selectedTCG} que coincidan con tu búsqueda.`);\n      }\n      console.log(`✅ Búsqueda en ${selectedTCG} completada: ${finalCards.length} cartas encontradas`);\n    } catch (error) {\n      console.error('Error searching cards:', error);\n      setCards([]);\n      setTotalResults(0);\n      setTotalPages(1);\n      setSearchError('Error al buscar cartas. Verifica tu conexión e inténtalo de nuevo.');\n    }\n    setLoading(false);\n  }, [filters, selectedTCG]);\n\n  // Paginación\n  const handlePagination = useCallback(newPage => {\n    if (newPage < 1 || newPage > totalPages) return;\n    if (searchTerm.trim()) {\n      performSearch(searchTerm, newPage);\n    }\n  }, [totalPages, searchTerm, performSearch]);\n\n  // Debounced search\n  const handleSearchChange = value => {\n    setSearchTerm(value);\n    setSearchError('');\n    if (debounceTimer) {\n      clearTimeout(debounceTimer);\n    }\n    if (!value.trim()) {\n      setCards([]);\n      setTotalResults(0);\n      setTotalPages(1);\n      setCurrentPage(1);\n      return;\n    }\n    if (!selectedTCG) {\n      setSearchError('⚠️ Selecciona un TCG antes de buscar');\n      return;\n    }\n    const timer = setTimeout(() => {\n      performSearch(value, 1);\n    }, 300); // Búsqueda rápida - solo 300ms\n\n    setDebounceTimer(timer);\n  };\n\n  // Cleanup debounce on unmount\n  useEffect(() => {\n    return () => {\n      if (debounceTimer) {\n        clearTimeout(debounceTimer);\n      }\n    };\n  }, [debounceTimer]);\n\n  // Load favorites from localStorage\n  useEffect(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    if (savedFavorites) {\n      setFavorites(JSON.parse(savedFavorites));\n    }\n  }, []);\n  const toggleFavorite = cardId => {\n    const newFavorites = favorites.includes(cardId) ? favorites.filter(id => id !== cardId) : [...favorites, cardId];\n    setFavorites(newFavorites);\n    localStorage.setItem('favorites', JSON.stringify(newFavorites));\n  };\n  const openCardModal = card => {\n    setSelectedCard(card);\n    setShowCardModal(true);\n  };\n  const closeCardModal = () => {\n    setSelectedCard(null);\n    setShowCardModal(false);\n  };\n\n  // Función para manejar cambios en filtros\n  const handleFiltersChange = newFilters => {\n    setFilters(newFilters);\n    setCurrentPage(1);\n    if (searchTerm.trim()) {\n      setTimeout(() => performSearch(searchTerm, 1), 100);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    transition: {\n      duration: 0.5\n    },\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 mb-md-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title mb-2\",\n            children: \"\\uD83C\\uDFAF Marketplace TCG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), selectedTCG && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge bg-primary fs-6\",\n              children: [\"Buscando en \", (_TCG_GAMES$selectedTC2 = TCG_GAMES[selectedTCG]) === null || _TCG_GAMES$selectedTC2 === void 0 ? void 0 : _TCG_GAMES$selectedTC2.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex gap-2\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-light\",\n            onClick: protectedAction(() => setShowSellModal(true), 'Debes iniciar sesión para vender cartas'),\n            className: \"d-flex align-items-center gap-2 btn-lg\",\n            style: {\n              color: 'white',\n              borderColor: 'white',\n              backgroundColor: 'transparent',\n              fontSize: '1.1rem',\n              padding: '0.75rem 1.5rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FaShoppingCart, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), \"Vender Cartas\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-center mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"fw-bold\",\n                children: \"1. Selecciona el TCG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                value: selectedTCG,\n                onChange: e => {\n                  setSelectedTCG(e.target.value);\n                  setSearchError('');\n                  setCards([]);\n                },\n                className: \"form-select-lg\",\n                size: \"lg\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Elige un Trading Card Game\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 19\n                }, this), Object.entries(TCG_GAMES).filter(([key]) => key !== 'unknown').map(([key, tcg]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: key,\n                  children: tcg.name\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-8\",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"fw-bold\",\n                children: \"2. Buscar cartas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: selectedTCG ? `🔍 Buscar cartas de ${(_TCG_GAMES$selectedTC3 = TCG_GAMES[selectedTCG]) === null || _TCG_GAMES$selectedTC3 === void 0 ? void 0 : _TCG_GAMES$selectedTC3.name}...` : \"Selecciona un TCG primero\",\n                  value: searchTerm,\n                  onChange: e => handleSearchChange(e.target.value),\n                  onKeyPress: e => e.key === 'Enter' && searchTerm.trim() && selectedTCG && performSearch(searchTerm, 1),\n                  className: \"form-control-lg\",\n                  disabled: !selectedTCG\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  onClick: () => setShowFilters(!showFilters),\n                  className: \"btn-lg d-flex align-items-center gap-2\",\n                  title: \"Filtros avanzados\",\n                  disabled: !selectedTCG,\n                  children: [/*#__PURE__*/_jsxDEV(FaFilter, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 21\n                  }, this), getActiveFiltersCount() > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"badge bg-primary\",\n                    children: getActiveFiltersCount()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 571,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"d-none d-md-inline\",\n                    children: \"Filtros\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => searchTerm.trim() && selectedTCG && performSearch(searchTerm, 1),\n                  disabled: loading || !searchTerm.trim() || !selectedTCG,\n                  variant: \"primary\",\n                  className: \"btn-lg\",\n                  children: [loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n                    size: \"sm\",\n                    animation: \"border\",\n                    role: \"status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(FaSearch, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"d-none d-sm-inline ms-2\",\n                    children: loading ? 'Buscando...' : 'Buscar'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this), searchError && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: searchError.includes('demostración') ? \"info\" : \"warning\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: searchError.includes('demostración') ? '💡 Información:' : '⚠️ Atención:'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 15\n          }, this), \" \", searchError, searchError.includes('demostración') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 small\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Para acceder a datos reales:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 19\n            }, this), \" Configura las API keys en las variables de entorno y cambia \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"useMockData\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 125\n            }, this), \" a \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"false\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 152\n            }, this), \" en el servicio.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this), totalResults > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-muted small\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cartas encontradas:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this), \" Mostrando \", (currentPage - 1) * 48 + 1, \" - \", Math.min(currentPage * 48, cards.length), \" de \", totalResults, \" resultados\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ms-2\",\n              children: searchError.includes('demostración') ? '🎭 Datos de demostración' : '📡'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"g-4\",\n        children: [showFilters && /*#__PURE__*/_jsxDEV(Col, {\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(MarketplaceFilters, {\n            filters: filters,\n            onFiltersChange: handleFiltersChange,\n            activeFiltersCount: getActiveFiltersCount()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: showFilters ? 9 : 12,\n          children: [!searchTerm.trim() && !getActiveFiltersCount() && /*#__PURE__*/_jsxDEV(FeaturedSections, {\n            onViewCard: openCardModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 15\n          }, this), cards.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(Pagination, {\n                className: \"justify-content-center\",\n                children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n                  disabled: currentPage === 1,\n                  onClick: () => handlePagination(currentPage - 1),\n                  \"aria-label\": \"P\\xE1gina anterior\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 17\n                }, this), (() => {\n                  const pages = [];\n                  const maxVisible = 5;\n                  let startPage = Math.max(1, currentPage - Math.floor(maxVisible / 2));\n                  let endPage = Math.min(totalPages, startPage + maxVisible - 1);\n                  if (endPage - startPage < maxVisible - 1) {\n                    startPage = Math.max(1, endPage - maxVisible + 1);\n                  }\n                  if (startPage > 1) {\n                    pages.push(/*#__PURE__*/_jsxDEV(Pagination.Item, {\n                      onClick: () => handlePagination(1),\n                      children: \"1\"\n                    }, 1, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 670,\n                      columnNumber: 23\n                    }, this));\n                    if (startPage > 2) {\n                      pages.push(/*#__PURE__*/_jsxDEV(Pagination.Ellipsis, {}, \"start-ellipsis\", false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 675,\n                        columnNumber: 34\n                      }, this));\n                    }\n                  }\n                  for (let i = startPage; i <= endPage; i++) {\n                    pages.push(/*#__PURE__*/_jsxDEV(Pagination.Item, {\n                      active: i === currentPage,\n                      onClick: () => handlePagination(i),\n                      children: i\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 681,\n                      columnNumber: 23\n                    }, this));\n                  }\n                  if (endPage < totalPages) {\n                    if (endPage < totalPages - 1) {\n                      pages.push(/*#__PURE__*/_jsxDEV(Pagination.Ellipsis, {}, \"end-ellipsis\", false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 693,\n                        columnNumber: 34\n                      }, this));\n                    }\n                    pages.push(/*#__PURE__*/_jsxDEV(Pagination.Item, {\n                      onClick: () => handlePagination(totalPages),\n                      children: totalPages\n                    }, totalPages, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 696,\n                      columnNumber: 23\n                    }, this));\n                  }\n                  return pages;\n                })(), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n                  disabled: currentPage === totalPages,\n                  onClick: () => handlePagination(currentPage + 1),\n                  \"aria-label\": \"P\\xE1gina siguiente\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"g-4\",\n              children: cards.map(card => {\n                var _card$images;\n                return /*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  lg: 4,\n                  className: \"mb-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"simplified-marketplace-card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"simplified-card-image-wrapper\",\n                      onClick: () => openCardModal(card),\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: ((_card$images = card.images) === null || _card$images === void 0 ? void 0 : _card$images.small) || 'https://via.placeholder.com/300x400',\n                        alt: card.name,\n                        className: \"simplified-card-image\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 717,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"simplified-favorite-btn\",\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: favorites.includes(card.id) ? \"danger\" : \"outline-light\",\n                          size: \"sm\",\n                          onClick: e => {\n                            e.stopPropagation();\n                            protectedAction(() => toggleFavorite(card.id), 'Debes iniciar sesión para agregar cartas a favoritos')();\n                          },\n                          className: \"rounded-circle\",\n                          title: favorites.includes(card.id) ? \"Quitar de favoritos\" : \"Agregar a favoritos\",\n                          children: /*#__PURE__*/_jsxDEV(FaHeart, {\n                            size: 12\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 738,\n                            columnNumber: 27\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 725,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 724,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 716,\n                      columnNumber: 21\n                    }, this), card.sellers && card.sellers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"simplified-sellers-info\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"simplified-best-price\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"seller-info\",\n                          children: /*#__PURE__*/_jsxDEV(\"small\", {\n                            className: \"seller-availability\",\n                            children: card.sellers.length === 1 ? \"Vendedor con stock disponible\" : `${card.sellers.length} vendedores con stock disponible`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 748,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 747,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 746,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 745,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 715,\n                    columnNumber: 19\n                  }, this)\n                }, card.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 713,\n                  columnNumber: 17\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SellCardModal, {\n      show: showSellModal,\n      handleClose: () => setShowSellModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardDetailModalOptimized, {\n      show: showCardModal,\n      onHide: closeCardModal,\n      card: selectedCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FloatingCart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 482,\n    columnNumber: 5\n  }, this);\n}\n_s(Marketplace, \"wW1cYMckaUwWNhsNeNB4DEt99QA=\", false, function () {\n  return [useCart, useAuthActions];\n});\n_c = Marketplace;\nvar _c;\n$RefreshReg$(_c, \"Marketplace\");","map":{"version":3,"names":["useState","useEffect","useCallback","Container","Row","Col","Card","Form","Spinner","Button","Pagination","Alert","apiClient","motion","useCart","useAuthActions","SellCardModal","MarketplaceFilters","FeaturedSections","CardDetailModalOptimized","FloatingCart","FaShoppingCart","FaWhatsapp","FaHeart","FaSearch","FaFilter","apiSearchService","jsxDEV","_jsxDEV","Fragment","_Fragment","TCG_GAMES","pokemon","name","onepiece","dragonball","digimon","magic","unionarena","gundam","unknown","Marketplace","_s","_TCG_GAMES$selectedTC2","_TCG_GAMES$selectedTC3","searchTerm","setSearchTerm","selectedTCG","setSelectedTCG","cards","setCards","loading","setLoading","currentPage","setCurrentPage","totalPages","setTotalPages","totalResults","setTotalResults","showSellModal","setShowSellModal","debounceTimer","setDebounceTimer","favorites","setFavorites","selectedCard","setSelectedCard","showCardModal","setShowCardModal","searchError","setSearchError","showFilters","setShowFilters","filters","setFilters","tcgTypes","priceRange","conditions","rarities","minRating","sortBy","addToCart","protectedAction","latestListings","setLatestListings","applyFilters","activeFilters","filtered","length","filter","card","includes","tcgType","priceRanges","min","max","range","price","averagePrice","minPrice","sellers","some","seller","condition","rarity","Math","random","onlyWithSellers","sort","a","b","maxPrice","localeCompare","_b$sellers","_a$sellers","_a$sellers2","_b$sellers2","_a$sellers3","_b$sellers3","aLatest","map","s","_s$createdAt","createdAt","seconds","bLatest","_s$createdAt2","getActiveFiltersCount","count","fetchLatestListings","latestQuery","query","collection","db","orderBy","limit","querySnapshot","getDocs","docs","doc","id","data","error","console","trim","searchCardsUnified","selectedTcg","page","pageSize","sanitizedTerm","toLowerCase","replace","log","apiResults","searchSpecificAPI","localSellers","searchLocalSellers","formatSetInfo","set","series","String","enrichedCards","cardSellers","cardId","cardName","hasLocalSellers","errors","localResults","convertListingsToCards","api","listingsQuery","where","listingsSnapshot","allListings","d","listing","listings","cardMap","Map","forEach","has","_TCG_GAMES$listing$tc","images","small","cardImage","large","setName","tcgName","get","push","listingId","sellerId","sellerName","quantity","availableQuantity","userPhone","Array","from","values","performSearch","term","searchResults","processedCards","prices","quantities","totalStock","reduce","sum","q","totalWeightedPrice","finalCards","ceil","errorMessages","err","join","_TCG_GAMES$selectedTC","handlePagination","newPage","handleSearchChange","value","clearTimeout","timer","setTimeout","savedFavorites","localStorage","getItem","JSON","parse","toggleFavorite","newFavorites","setItem","stringify","openCardModal","closeCardModal","handleFiltersChange","newFilters","div","initial","opacity","animate","transition","duration","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","style","color","borderColor","backgroundColor","fontSize","padding","size","Group","Label","Select","onChange","e","target","Object","entries","key","tcg","Control","type","placeholder","onKeyPress","disabled","title","animation","role","lg","onFiltersChange","activeFiltersCount","onViewCard","Prev","pages","maxVisible","startPage","floor","endPage","Item","Ellipsis","i","active","Next","_card$images","md","src","alt","stopPropagation","show","handleClose","onHide","_c","$RefreshReg$"],"sources":["/home/frodev/Downloads/FroDev-CR-TropicalTCGPlayers/src/pages/Marketplace.js"],"sourcesContent":["// src/pages/Marketplace.js\nimport { useState, useEffect, useCallback } from 'react';\nimport { Container, Row, Col, Card, Form, Spinner, Button, Pagination, Alert } from 'react-bootstrap';\nimport apiClient from '../services/api';\nimport { motion } from 'framer-motion';\nimport { useCart } from '../contexts/CartContext';\nimport { useAuthActions } from '../hooks/useAuthActions';\nimport SellCardModal from '../components/SellCardModal';\nimport MarketplaceFilters from '../components/MarketplaceFilters';\nimport FeaturedSections from '../components/FeaturedSections';\nimport CardDetailModalOptimized from '../components/CardDetailModalOptimized';\nimport FloatingCart from '../components/FloatingCart';\nimport { FaShoppingCart, FaWhatsapp, FaHeart, FaSearch, FaFilter } from 'react-icons/fa';\nimport apiSearchService from '../services/apiSearchService';\n\n// Configuración simple para mapear tipos de TCG\nconst TCG_GAMES = {\n  pokemon: { name: 'Pokémon TCG' },\n  onepiece: { name: 'One Piece' },\n  dragonball: { name: 'Dragon Ball' },\n  digimon: { name: 'Digimon' },\n  magic: { name: 'Magic: The Gathering' },\n  unionarena: { name: 'Union Arena' },\n  gundam: { name: 'Gundam' },\n  unknown: { name: 'Desconocido' }\n};\n\n// Utility functions moved to CardDetailModal for better organization\n\nexport default function Marketplace() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedTCG, setSelectedTCG] = useState('');\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const [showSellModal, setShowSellModal] = useState(false);\n  const [debounceTimer, setDebounceTimer] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [showCardModal, setShowCardModal] = useState(false);\n  const [searchError, setSearchError] = useState('');\n  \n  // Nuevos estados para las funcionalidades mejoradas\n  const [showFilters, setShowFilters] = useState(false);\n  const [filters, setFilters] = useState({\n    tcgTypes: [],\n    priceRange: null,\n    conditions: [],\n    rarities: [],\n    minRating: 0,\n    sortBy: 'newest'\n  });\n  \n  \n  const { addToCart } = useCart();\n  const { protectedAction } = useAuthActions();\n\n  const [latestListings, setLatestListings] = useState([]);\n\n  // Función para aplicar filtros avanzados (actualizada para cartas unificadas)\n  const applyFilters = (cards, activeFilters) => {\n    let filtered = [...cards];\n\n    // Filtro por TCG Types\n    if (activeFilters.tcgTypes.length > 0) {\n      filtered = filtered.filter(card => \n        activeFilters.tcgTypes.includes(card.tcgType)\n      );\n    }\n\n    // Filtro por precio (basado en precio promedio de la carta)\n    if (activeFilters.priceRange) {\n      const priceRanges = {\n        'under10': { min: 0, max: 10 },\n        '10to25': { min: 10, max: 25 },\n        '25to50': { min: 25, max: 50 },\n        '50to100': { min: 50, max: 100 },\n        'over100': { min: 100, max: 9999 }\n      };\n      \n      const range = priceRanges[activeFilters.priceRange];\n      if (range) {\n        filtered = filtered.filter(card => {\n          const price = card.averagePrice || card.minPrice || 0;\n          return price >= range.min && price <= range.max;\n        });\n      }\n    }\n\n    // Filtro por condición (si tiene vendedores con esa condición)\n    if (activeFilters.conditions.length > 0) {\n      filtered = filtered.filter(card => \n        card.sellers && card.sellers.some(seller => \n          activeFilters.conditions.includes(seller.condition)\n        )\n      );\n    }\n\n    // Filtro por rareza\n    if (activeFilters.rarities.length > 0) {\n      filtered = filtered.filter(card => \n        activeFilters.rarities.includes(card.rarity)\n      );\n    }\n\n    // Filtro por rating mínimo del vendedor (simulado)\n    if (activeFilters.minRating > 0) {\n      // Por ahora simulamos el rating, después se puede implementar con datos reales\n      filtered = filtered.filter(() => Math.random() > (activeFilters.minRating / 5 - 0.3));\n    }\n\n    // Filtro adicional: solo cartas con vendedores\n    const onlyWithSellers = activeFilters.onlyWithSellers || false;\n    if (onlyWithSellers) {\n      filtered = filtered.filter(card => card.sellers && card.sellers.length > 0);\n    }\n\n    // Ordenamiento\n    switch (activeFilters.sortBy) {\n      case 'price-low':\n        filtered.sort((a, b) => (a.minPrice || 0) - (b.minPrice || 0));\n        break;\n      case 'price-high':\n        filtered.sort((a, b) => (b.maxPrice || 0) - (a.maxPrice || 0));\n        break;\n      case 'name-az':\n        filtered.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n      case 'name-za':\n        filtered.sort((a, b) => b.name.localeCompare(a.name));\n        break;\n      case 'sellers-most':\n        filtered.sort((a, b) => (b.sellers?.length || 0) - (a.sellers?.length || 0));\n        break;\n      case 'sellers-least':\n        filtered.sort((a, b) => (a.sellers?.length || 0) - (b.sellers?.length || 0));\n        break;\n      case 'newest':\n      default:\n        // Ordenar por carta más reciente (basado en el listing más reciente)\n        filtered.sort((a, b) => {\n          const aLatest = a.sellers?.length > 0 ? Math.max(...a.sellers.map(s => s.createdAt?.seconds || 0)) : 0;\n          const bLatest = b.sellers?.length > 0 ? Math.max(...b.sellers.map(s => s.createdAt?.seconds || 0)) : 0;\n          return bLatest - aLatest;\n        });\n        break;\n    }\n\n    return filtered;\n  };\n\n  // Contar filtros activos\n  const getActiveFiltersCount = () => {\n    let count = 0;\n    if (filters.tcgTypes.length > 0) count++;\n    if (filters.priceRange) count++;\n    if (filters.conditions.length > 0) count++;\n    if (filters.rarities.length > 0) count++;\n    if (filters.minRating > 0) count++;\n    if (filters.sortBy !== 'newest') count++;\n    return count;\n  };\n\n  useEffect(() => {\n    const fetchLatestListings = async () => {\n      try {\n        const latestQuery = query(\n          collection(db, 'listings'),\n          orderBy('createdAt', 'desc'),\n          limit(15)\n        );\n        const querySnapshot = await getDocs(latestQuery);\n        setLatestListings(querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n      } catch (error) {\n        console.error('Error al obtener últimas cartas publicadas:', error);\n      }\n    };\n    \n    if (!searchTerm.trim()) {\n      fetchLatestListings();\n    }\n  }, [searchTerm]);\n\n  // Función simplificada - buscar en una sola API según el TCG seleccionado\n  const searchCardsUnified = async (searchTerm, selectedTcg, page = 1, pageSize = 12) => {\n    const sanitizedTerm = searchTerm\n      .trim()\n      .toLowerCase()\n      .replace(/[^a-z0-9\\s\\-']/g, '')\n      .replace(/\\s+/g, ' ');\n    \n    console.log(`🔍 Búsqueda en ${selectedTcg}: \"${sanitizedTerm}\"`);\n    \n    try {\n      // Buscar en la API específica seleccionada\n      const apiResults = await apiSearchService.searchSpecificAPI(\n        selectedTcg,\n        sanitizedTerm, \n        page, \n        Math.max(pageSize, 50) // Aumentar minídmo a 50 cartas\n      );\n      \n      // Buscar vendedores locales en paralelo\n      const localSellers = await searchLocalSellers(sanitizedTerm);\n      \n      // Función para formatear información del set\n      const formatSetInfo = (set) => {\n        if (!set) return 'Set desconocido';\n        if (typeof set === 'string') return set;\n        if (typeof set === 'object' && set !== null) {\n          const name = set.name || '';\n          const series = set.series || '';\n          if (name && series) return `${name}, ${series}`;\n          else if (name) return name;\n          else if (series) return series;\n          else return 'Set desconocido';\n        }\n        return String(set);\n      };\n\n      // Combinar resultados: agregar vendedores locales a las cartas de API\n      const enrichedCards = apiResults.cards.map(card => {\n        const cardSellers = localSellers.filter(seller => \n          seller.cardId === card.id || \n          (seller.cardName.toLowerCase().trim() === card.name.toLowerCase().trim())\n        );\n        \n        return {\n          ...card,\n          // Formatear el objeto set correctamente\n          set: { name: formatSetInfo(card.set) },\n          sellers: cardSellers,\n          hasLocalSellers: cardSellers.length > 0\n        };\n      });\n      \n      return {\n        cards: enrichedCards,\n        totalResults: apiResults.totalResults,\n        errors: apiResults.errors || [],\n        page: apiResults.page,\n        totalPages: apiResults.totalPages\n      };\n      \n    } catch (error) {\n      console.error('Error en búsqueda específica:', error);\n      // Fallback: buscar solo en vendedores locales\n      const localResults = await searchLocalSellers(sanitizedTerm);\n      return {\n        cards: convertListingsToCards(localResults),\n        totalResults: localResults.length,\n        errors: [{ api: 'Specific', error: `API de ${selectedTcg} falló, mostrando solo vendedores locales` }]\n      };\n    }\n  };\n  \n  // Buscar solo en vendedores locales\n  const searchLocalSellers = async (searchTerm) => {\n    try {\n      const listingsQuery = query(\n        collection(db, 'listings'),\n        where('status', '==', 'active'),\n        orderBy('createdAt', 'desc'),\n        limit(100)\n      );\n      \n      const listingsSnapshot = await getDocs(listingsQuery);\n      let allListings = listingsSnapshot.docs.map(d => ({ id: d.id, ...d.data() }));\n      \n      // Filtrar por término de búsqueda\n      if (searchTerm) {\n        allListings = allListings.filter(listing => \n          listing.cardName && listing.cardName.toLowerCase().includes(searchTerm.toLowerCase())\n        );\n      }\n      \n      return allListings;\n    } catch (error) {\n      console.error('Error buscando vendedores locales:', error);\n      return [];\n    }\n  };\n  \n  // Convertir listings a formato de cartas\n  const convertListingsToCards = (listings) => {\n    const cardMap = new Map();\n    \n    listings.forEach(listing => {\n      const cardId = listing.cardId || listing.id;\n      \n      if (!cardMap.has(cardId)) {\n        cardMap.set(cardId, {\n          id: cardId,\n          name: listing.cardName,\n          images: { small: listing.cardImage, large: listing.cardImage },\n          set: { name: listing.setName || 'Desconocido' },\n          rarity: listing.rarity || 'Sin rareza',\n          tcgType: listing.tcgType || 'unknown',\n          tcgName: TCG_GAMES[listing.tcgType]?.name || 'Desconocido',\n          sellers: [],\n          hasLocalSellers: true\n        });\n      }\n      \n      const card = cardMap.get(cardId);\n      card.sellers.push({\n        listingId: listing.id,\n        sellerId: listing.sellerId,\n        sellerName: listing.sellerName,\n        price: listing.price,\n        condition: listing.condition,\n        quantity: listing.availableQuantity || listing.quantity || 1,\n        createdAt: listing.createdAt,\n        userPhone: listing.userPhone\n      });\n    });\n    \n    return Array.from(cardMap.values());\n  };\n\n\n  // Función de búsqueda específica por TCG\n  const performSearch = useCallback(async (term, page = 1) => {\n    if (!term.trim()) {\n      setCards([]);\n      setTotalResults(0);\n      setTotalPages(1);\n      setCurrentPage(1);\n      return;\n    }\n\n    if (!selectedTCG) {\n      setSearchError('⚠️ Selecciona un TCG antes de buscar');\n      return;\n    }\n\n    setLoading(true);\n    setSearchError('');\n    \n    try {\n      // Búsqueda específica en el TCG seleccionado + vendedores locales  \n      const searchResults = await searchCardsUnified(term, selectedTCG, page, 48); // Aumentar a 48 cartas por página\n      \n      // Procesar cartas y calcular precios de vendedores\n      const processedCards = searchResults.cards.map(card => {\n        if (card.sellers && card.sellers.length > 0) {\n          const prices = card.sellers.map(s => s.price);\n          const quantities = card.sellers.map(s => s.quantity);\n          \n          card.minPrice = Math.min(...prices);\n          card.maxPrice = Math.max(...prices);\n          card.totalStock = quantities.reduce((sum, q) => sum + q, 0);\n          \n          const totalWeightedPrice = card.sellers.reduce((sum, seller) => {\n            return sum + (seller.price * seller.quantity);\n          }, 0);\n          card.averagePrice = totalWeightedPrice / card.totalStock;\n          \n          // Ordenar vendedores por precio\n          card.sellers.sort((a, b) => a.price - b.price);\n        }\n        \n        return card;\n      });\n      \n      // Aplicar filtros locales\n      let finalCards = applyFilters(processedCards, filters);\n\n      setCards(finalCards);\n      setTotalResults(searchResults.totalResults);\n      setTotalPages(searchResults.totalPages || Math.ceil(finalCards.length / 48));\n      setCurrentPage(page);\n\n      // Mostrar información sobre el estado de los datos\n      if (searchResults.errors && searchResults.errors.length > 0) {\n        const errorMessages = searchResults.errors.map(err => `${err.api}: ${err.error}`).join('; ');\n        setSearchError(`⚠️ ${errorMessages}`);\n      }\n      \n      if (finalCards.length === 0) {\n        setSearchError(`No se encontraron cartas de ${TCG_GAMES[selectedTCG]?.name || selectedTCG} que coincidan con tu búsqueda.`);\n      }\n\n      console.log(`✅ Búsqueda en ${selectedTCG} completada: ${finalCards.length} cartas encontradas`);\n\n    } catch (error) {\n      console.error('Error searching cards:', error);\n      setCards([]);\n      setTotalResults(0);\n      setTotalPages(1);\n      setSearchError('Error al buscar cartas. Verifica tu conexión e inténtalo de nuevo.');\n    }\n    setLoading(false);\n  }, [filters, selectedTCG]);\n\n  // Paginación\n  const handlePagination = useCallback((newPage) => {\n    if (newPage < 1 || newPage > totalPages) return;\n    if (searchTerm.trim()) {\n      performSearch(searchTerm, newPage);\n    }\n  }, [totalPages, searchTerm, performSearch]);\n\n  // Debounced search\n  const handleSearchChange = (value) => {\n    setSearchTerm(value);\n    setSearchError('');\n    \n    if (debounceTimer) {\n      clearTimeout(debounceTimer);\n    }\n    \n    if (!value.trim()) {\n      setCards([]);\n      setTotalResults(0);\n      setTotalPages(1);\n      setCurrentPage(1);\n      return;\n    }\n    \n    if (!selectedTCG) {\n      setSearchError('⚠️ Selecciona un TCG antes de buscar');\n      return;\n    }\n    \n    const timer = setTimeout(() => {\n      performSearch(value, 1);\n    }, 300); // Búsqueda rápida - solo 300ms\n    \n    setDebounceTimer(timer);\n  };\n\n  // Cleanup debounce on unmount\n  useEffect(() => {\n    return () => {\n      if (debounceTimer) {\n        clearTimeout(debounceTimer);\n      }\n    };\n  }, [debounceTimer]);\n\n  // Load favorites from localStorage\n  useEffect(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    if (savedFavorites) {\n      setFavorites(JSON.parse(savedFavorites));\n    }\n  }, []);\n\n  const toggleFavorite = (cardId) => {\n    const newFavorites = favorites.includes(cardId) \n      ? favorites.filter(id => id !== cardId)\n      : [...favorites, cardId];\n    \n    setFavorites(newFavorites);\n    localStorage.setItem('favorites', JSON.stringify(newFavorites));\n  };\n\n  const openCardModal = (card) => {\n    setSelectedCard(card);\n    setShowCardModal(true);\n  };\n\n  const closeCardModal = () => {\n    setSelectedCard(null);\n    setShowCardModal(false);\n  };\n\n\n  // Función para manejar cambios en filtros\n  const handleFiltersChange = (newFilters) => {\n    setFilters(newFilters);\n    setCurrentPage(1);\n    if (searchTerm.trim()) {\n      setTimeout(() => performSearch(searchTerm, 1), 100);\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n      className=\"section\"\n    >\n      <Container>\n        {/* Header del Marketplace */}\n        <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4\">\n          <div className=\"mb-3 mb-md-0\">\n            <h2 className=\"section-title mb-2\">🎯 Marketplace TCG</h2>\n            {selectedTCG && (\n              <div className=\"mt-2\">\n                <span className=\"badge bg-primary fs-6\">\n                  Buscando en {TCG_GAMES[selectedTCG]?.name}\n                </span>\n              </div>\n            )}\n          </div>\n          <div className=\"d-flex gap-2\">\n            <Button \n              variant=\"outline-light\" \n              onClick={protectedAction(\n                () => setShowSellModal(true),\n                'Debes iniciar sesión para vender cartas'\n              )}\n              className=\"d-flex align-items-center gap-2 btn-lg\"\n              style={{\n                color: 'white',\n                borderColor: 'white',\n                backgroundColor: 'transparent',\n                fontSize: '1.1rem',\n                padding: '0.75rem 1.5rem'\n              }}\n            >\n              <FaShoppingCart size={16} />\n              Vender Cartas\n            </Button>\n          </div>\n        </div>\n\n\n        {/* Selector de TCG obligatorio */}\n        <div className=\"mb-4\">\n          <div className=\"row align-items-center mb-3\">\n            <div className=\"col-12 col-md-4\">\n              <Form.Group>\n                <Form.Label className=\"fw-bold\">1. Selecciona el TCG</Form.Label>\n                <Form.Select\n                  value={selectedTCG}\n                  onChange={(e) => {\n                    setSelectedTCG(e.target.value);\n                    setSearchError('');\n                    setCards([]);\n                  }}\n                  className=\"form-select-lg\"\n                  size=\"lg\"\n                >\n                  <option value=\"\">Elige un Trading Card Game</option>\n                  {Object.entries(TCG_GAMES).filter(([key]) => key !== 'unknown').map(([key, tcg]) => (\n                    <option key={key} value={key}>\n                      {tcg.name}\n                    </option>\n                  ))}\n                </Form.Select>\n              </Form.Group>\n            </div>\n            <div className=\"col-12 col-md-8\">\n              <Form.Group>\n                <Form.Label className=\"fw-bold\">2. Buscar cartas</Form.Label>\n                <div className=\"input-group\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder={selectedTCG ? `🔍 Buscar cartas de ${TCG_GAMES[selectedTCG]?.name}...` : \"Selecciona un TCG primero\"}\n                    value={searchTerm}\n                    onChange={(e) => handleSearchChange(e.target.value)}\n                    onKeyPress={(e) => e.key === 'Enter' && searchTerm.trim() && selectedTCG && performSearch(searchTerm, 1)}\n                    className=\"form-control-lg\"\n                    disabled={!selectedTCG}\n                  />\n                  <Button \n                    variant=\"outline-secondary\"\n                    onClick={() => setShowFilters(!showFilters)}\n                    className=\"btn-lg d-flex align-items-center gap-2\"\n                    title=\"Filtros avanzados\"\n                    disabled={!selectedTCG}\n                  >\n                    <FaFilter />\n                    {getActiveFiltersCount() > 0 && (\n                      <span className=\"badge bg-primary\">{getActiveFiltersCount()}</span>\n                    )}\n                    <span className=\"d-none d-md-inline\">Filtros</span>\n                  </Button>\n                  <Button \n                    onClick={() => searchTerm.trim() && selectedTCG && performSearch(searchTerm, 1)} \n                    disabled={loading || !searchTerm.trim() || !selectedTCG}\n                    variant=\"primary\"\n                    className=\"btn-lg\"\n                  >\n                    {loading ? (\n                      <Spinner size=\"sm\" animation=\"border\" role=\"status\" />\n                    ) : (\n                      <FaSearch size={14} />\n                    )}\n                    <span className=\"d-none d-sm-inline ms-2\">\n                      {loading ? 'Buscando...' : 'Buscar'}\n                    </span>\n                  </Button>\n                </div>\n              </Form.Group>\n            </div>\n          </div>\n          \n\n          {/* Mostrar información sobre el estado de los datos */}\n          {searchError && (\n            <Alert \n              variant={searchError.includes('demostración') ? \"info\" : \"warning\"} \n              className=\"mb-3\"\n            >\n              <strong>\n                {searchError.includes('demostración') ? '💡 Información:' : '⚠️ Atención:'}\n              </strong> {searchError}\n              {searchError.includes('demostración') && (\n                <div className=\"mt-2 small\">\n                  <strong>Para acceder a datos reales:</strong> Configura las API keys en las variables de entorno y cambia <code>useMockData</code> a <code>false</code> en el servicio.\n                </div>\n              )}\n            </Alert>\n          )}\n          \n          {totalResults > 0 && (\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <div className=\"text-muted small\">\n                <strong>Cartas encontradas:</strong> Mostrando {(currentPage - 1) * 48 + 1} - {Math.min(currentPage * 48, cards.length)} de {totalResults} resultados\n                <span className=\"ms-2\">\n                  {searchError.includes('demostración') ? \n                    '🎭 Datos de demostración' : \n                    '📡'\n                  }\n                </span>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Layout principal con sidebar de filtros */}\n        <Row className=\"g-4\">\n          {/* Sidebar de filtros */}\n          {showFilters && (\n            <Col lg={3}>\n              <MarketplaceFilters \n                filters={filters}\n                onFiltersChange={handleFiltersChange}\n                activeFiltersCount={getActiveFiltersCount()}\n              />\n            </Col>\n          )}\n          \n          {/* Contenido principal */}\n          <Col lg={showFilters ? 9 : 12}>\n            {/* Secciones destacadas (solo cuando no hay búsqueda activa) */}\n            {!searchTerm.trim() && !getActiveFiltersCount() && (\n              <FeaturedSections onViewCard={openCardModal} />\n            )}\n\n\n        {cards.length > 0 && (\n          <>\n            <div className=\"mb-4\">\n              <Pagination className=\"justify-content-center\">\n                <Pagination.Prev \n                  disabled={currentPage === 1} \n                  onClick={() => handlePagination(currentPage - 1)}\n                  aria-label=\"Página anterior\"\n                />\n                {(() => {\n                  const pages = [];\n                  const maxVisible = 5;\n                  let startPage = Math.max(1, currentPage - Math.floor(maxVisible / 2));\n                  let endPage = Math.min(totalPages, startPage + maxVisible - 1);\n                  \n                  if (endPage - startPage < maxVisible - 1) {\n                    startPage = Math.max(1, endPage - maxVisible + 1);\n                  }\n                  \n                  if (startPage > 1) {\n                    pages.push(\n                      <Pagination.Item key={1} onClick={() => handlePagination(1)}>\n                        1\n                      </Pagination.Item>\n                    );\n                    if (startPage > 2) {\n                      pages.push(<Pagination.Ellipsis key=\"start-ellipsis\" />);\n                    }\n                  }\n                  \n                  for (let i = startPage; i <= endPage; i++) {\n                    pages.push(\n                      <Pagination.Item\n                        key={i}\n                        active={i === currentPage}\n                        onClick={() => handlePagination(i)}\n                      >\n                        {i}\n                      </Pagination.Item>\n                    );\n                  }\n                  \n                  if (endPage < totalPages) {\n                    if (endPage < totalPages - 1) {\n                      pages.push(<Pagination.Ellipsis key=\"end-ellipsis\" />);\n                    }\n                    pages.push(\n                      <Pagination.Item key={totalPages} onClick={() => handlePagination(totalPages)}>\n                        {totalPages}\n                      </Pagination.Item>\n                    );\n                  }\n                  \n                  return pages;\n                })()}\n                <Pagination.Next \n                  disabled={currentPage === totalPages} \n                  onClick={() => handlePagination(currentPage + 1)}\n                  aria-label=\"Página siguiente\"\n                />\n              </Pagination>\n            </div>\n            <Row className=\"g-4\">\n              {cards.map(card => (\n                <Col key={card.id} md={6} lg={4} className=\"mb-4\">\n                  {/* Vista simplificada: solo imagen de carta + información de vendedores */}\n                  <div className=\"simplified-marketplace-card\">\n                    <div className=\"simplified-card-image-wrapper\" onClick={() => openCardModal(card)}>\n                      <img \n                        src={card.images?.small || 'https://via.placeholder.com/300x400'} \n                        alt={card.name}\n                        className=\"simplified-card-image\"\n                      />\n                      \n                      {/* Botón de favoritos flotante */}\n                      <div className=\"simplified-favorite-btn\">\n                        <Button\n                          variant={favorites.includes(card.id) ? \"danger\" : \"outline-light\"}\n                          size=\"sm\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            protectedAction(\n                              () => toggleFavorite(card.id),\n                              'Debes iniciar sesión para agregar cartas a favoritos'\n                            )();\n                          }}\n                          className=\"rounded-circle\"\n                          title={favorites.includes(card.id) ? \"Quitar de favoritos\" : \"Agregar a favoritos\"}\n                        >\n                          <FaHeart size={12} />\n                        </Button>\n                      </div>\n                    </div>\n                    \n                    {/* Información de vendedores solo si hay */}\n                    {card.sellers && card.sellers.length > 0 && (\n                      <div className=\"simplified-sellers-info\">\n                        <div className=\"simplified-best-price\">\n                          <div className=\"seller-info\">\n                            <small className=\"seller-availability\">\n                              {card.sellers.length === 1 ? \n                                \"Vendedor con stock disponible\" :\n                                `${card.sellers.length} vendedores con stock disponible`\n                              }\n                            </small>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </Col>\n              ))}\n            </Row>\n          </>\n        )}\n          </Col>\n        </Row>\n      </Container>\n\n      <SellCardModal show={showSellModal} handleClose={() => setShowSellModal(false)} />\n      \n      {/* Modal de Detalle de Carta - Componente optimizado para móviles */}\n      <CardDetailModalOptimized \n        show={showCardModal}\n        onHide={closeCardModal}\n        card={selectedCard}\n      />\n\n      {/* Carrito flotante */}\n      <FloatingCart />\n\n    </motion.div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}