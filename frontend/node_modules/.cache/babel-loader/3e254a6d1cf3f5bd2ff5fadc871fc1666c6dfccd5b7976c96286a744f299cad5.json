{"ast":null,"code":"// src/hooks/useAuthActions.js\n// FIREBASE REMOVED - TODO: Replace with backend API\n// FIREBASE REMOVED - TODO: Replace with backend API\n\nexport const useAuthActions = () => {\n  // TODO: Replace with AuthContext when migrated\n  console.log('🚧 useAuthActions: Firebase hook commented out - returning mock data');\n\n  // FIREBASE CODE COMMENTED OUT - REPLACE WITH BACKEND API\n  /*\n  const [user] = useAuthState(auth);\n  */\n\n  const user = null; // Mock user for development\n\n  const requireAuth = (action, options = {}) => {\n    const {\n      message = 'Debes iniciar sesión para realizar esta acción',\n      onLogin = null\n    } = options;\n    if (!user) {\n      if (window.confirm(`${message}\\n\\n¿Deseas iniciar sesión ahora?`)) {\n        if (onLogin) {\n          onLogin();\n        } else {\n          // TODO: Replace with proper auth modal trigger\n          console.log('🚧 Auth modal trigger - using fallback');\n          alert('🚧 Funcionalidad en desarrollo - Por favor, inicia sesión desde la barra de navegación');\n        }\n      }\n      return false;\n    }\n\n    // Usuario autenticado, ejecutar acción\n    if (typeof action === 'function') {\n      action();\n    }\n    return true;\n  };\n  const protectedAction = (action, authMessage) => {\n    return () => requireAuth(action, {\n      message: authMessage\n    });\n  };\n  return {\n    user,\n    isAuthenticated: !!user,\n    requireAuth,\n    protectedAction\n  };\n};","map":{"version":3,"names":["useAuthActions","console","log","user","requireAuth","action","options","message","onLogin","window","confirm","alert","protectedAction","authMessage","isAuthenticated"],"sources":["/home/frodev/Downloads/FroDev-CR-TropicalTCGPlayers/src/hooks/useAuthActions.js"],"sourcesContent":["// src/hooks/useAuthActions.js\n// FIREBASE REMOVED - TODO: Replace with backend API\n// FIREBASE REMOVED - TODO: Replace with backend API\n\nexport const useAuthActions = () => {\n  // TODO: Replace with AuthContext when migrated\n  console.log('🚧 useAuthActions: Firebase hook commented out - returning mock data');\n  \n  // FIREBASE CODE COMMENTED OUT - REPLACE WITH BACKEND API\n  /*\n  const [user] = useAuthState(auth);\n  */\n  \n  const user = null; // Mock user for development\n\n  const requireAuth = (action, options = {}) => {\n    const { \n      message = 'Debes iniciar sesión para realizar esta acción',\n      onLogin = null \n    } = options;\n\n    if (!user) {\n      if (window.confirm(`${message}\\n\\n¿Deseas iniciar sesión ahora?`)) {\n        if (onLogin) {\n          onLogin();\n        } else {\n          // TODO: Replace with proper auth modal trigger\n          console.log('🚧 Auth modal trigger - using fallback');\n          alert('🚧 Funcionalidad en desarrollo - Por favor, inicia sesión desde la barra de navegación');\n        }\n      }\n      return false;\n    }\n    \n    // Usuario autenticado, ejecutar acción\n    if (typeof action === 'function') {\n      action();\n    }\n    return true;\n  };\n\n  const protectedAction = (action, authMessage) => {\n    return () => requireAuth(action, { message: authMessage });\n  };\n\n  return {\n    user,\n    isAuthenticated: !!user,\n    requireAuth,\n    protectedAction\n  };\n};"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,MAAMA,cAAc,GAAGA,CAAA,KAAM;EAClC;EACAC,OAAO,CAACC,GAAG,CAAC,sEAAsE,CAAC;;EAEnF;EACA;AACF;AACA;;EAEE,MAAMC,IAAI,GAAG,IAAI,CAAC,CAAC;;EAEnB,MAAMC,WAAW,GAAGA,CAACC,MAAM,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;IAC5C,MAAM;MACJC,OAAO,GAAG,gDAAgD;MAC1DC,OAAO,GAAG;IACZ,CAAC,GAAGF,OAAO;IAEX,IAAI,CAACH,IAAI,EAAE;MACT,IAAIM,MAAM,CAACC,OAAO,CAAC,GAAGH,OAAO,mCAAmC,CAAC,EAAE;QACjE,IAAIC,OAAO,EAAE;UACXA,OAAO,CAAC,CAAC;QACX,CAAC,MAAM;UACL;UACAP,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;UACrDS,KAAK,CAAC,wFAAwF,CAAC;QACjG;MACF;MACA,OAAO,KAAK;IACd;;IAEA;IACA,IAAI,OAAON,MAAM,KAAK,UAAU,EAAE;MAChCA,MAAM,CAAC,CAAC;IACV;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMO,eAAe,GAAGA,CAACP,MAAM,EAAEQ,WAAW,KAAK;IAC/C,OAAO,MAAMT,WAAW,CAACC,MAAM,EAAE;MAAEE,OAAO,EAAEM;IAAY,CAAC,CAAC;EAC5D,CAAC;EAED,OAAO;IACLV,IAAI;IACJW,eAAe,EAAE,CAAC,CAACX,IAAI;IACvBC,WAAW;IACXQ;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}