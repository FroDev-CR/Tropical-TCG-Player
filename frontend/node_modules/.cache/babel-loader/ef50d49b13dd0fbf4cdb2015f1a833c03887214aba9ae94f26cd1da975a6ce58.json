{"ast":null,"code":"var _jsxFileName = \"/home/frodev/Downloads/FroDev-CR-TropicalTCGPlayers/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// src/contexts/AuthContext.js\n// Nuevo contexto de autenticación que usa el backend Node.js en lugar de Firebase\n\nimport { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport backendAPI from '../services/backendAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  var _user$verification, _user$verification2, _user$suspension;\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Verificar token al cargar la aplicación\n  useEffect(() => {\n    const initializeAuth = async () => {\n      setLoading(true);\n      try {\n        if (apiClient.isAuthenticated()) {\n          // Verificar si el token es válido\n          const response = await apiClient.verifyToken();\n          if (response.success) {\n            setUser(response.user);\n          } else {\n            // Token inválido, limpiar\n            apiClient.clearTokens();\n            setUser(null);\n          }\n        } else {\n          setUser(null);\n        }\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n        // Si hay error verificando token, limpiar todo\n        apiClient.clearTokens();\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n\n  // Función para registrar nuevo usuario\n  const register = useCallback(async userData => {\n    try {\n      setError(null);\n      setLoading(true);\n      const response = await apiClient.register(userData);\n      if (response.success) {\n        setUser(response.user);\n        console.log('✅ Usuario registrado exitosamente:', response.user.username);\n        return {\n          success: true,\n          user: response.user\n        };\n      } else {\n        throw new Error(response.message || 'Error en registro');\n      }\n    } catch (error) {\n      console.error('❌ Error en registro:', error);\n      setError(error);\n      return {\n        success: false,\n        error: error.message || 'Error registrando usuario'\n      };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Función para login\n  const login = useCallback(async (email, password) => {\n    try {\n      setError(null);\n      setLoading(true);\n      const response = await apiClient.login(email, password);\n      if (response.success) {\n        setUser(response.user);\n        console.log('✅ Login exitoso:', response.user.username);\n        return {\n          success: true,\n          user: response.user\n        };\n      } else {\n        throw new Error(response.message || 'Error en login');\n      }\n    } catch (error) {\n      console.error('❌ Error en login:', error);\n      setError(error);\n      return {\n        success: false,\n        error: error.message || 'Credenciales incorrectas'\n      };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Función para logout\n  const logout = useCallback(async () => {\n    try {\n      setLoading(true);\n      await apiClient.logout();\n      setUser(null);\n      console.log('👋 Logout exitoso');\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('❌ Error en logout:', error);\n      // Aunque haya error en logout, limpiar estado local\n      setUser(null);\n      return {\n        success: false,\n        error: error.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Función para actualizar perfil\n  const updateProfile = useCallback(async profileData => {\n    try {\n      setError(null);\n      const response = await apiClient.updateProfile(profileData);\n      if (response.success) {\n        setUser(response.user);\n        console.log('✅ Perfil actualizado');\n        return {\n          success: true,\n          user: response.user\n        };\n      } else {\n        throw new Error(response.message || 'Error actualizando perfil');\n      }\n    } catch (error) {\n      console.error('❌ Error actualizando perfil:', error);\n      setError(error);\n      return {\n        success: false,\n        error: error.message || 'Error actualizando perfil'\n      };\n    }\n  }, []);\n\n  // Función para actualizar configuraciones\n  const updateSettings = useCallback(async settings => {\n    try {\n      setError(null);\n      const response = await apiClient.updateSettings(settings);\n      if (response.success) {\n        // Actualizar settings en el usuario actual\n        setUser(prevUser => ({\n          ...prevUser,\n          settings: response.settings\n        }));\n        console.log('⚙️ Configuraciones actualizadas');\n        return {\n          success: true,\n          settings: response.settings\n        };\n      } else {\n        throw new Error(response.message || 'Error actualizando configuraciones');\n      }\n    } catch (error) {\n      console.error('❌ Error actualizando configuraciones:', error);\n      setError(error);\n      return {\n        success: false,\n        error: error.message || 'Error actualizando configuraciones'\n      };\n    }\n  }, []);\n\n  // Función para cambiar contraseña\n  const changePassword = useCallback(async (currentPassword, newPassword) => {\n    try {\n      setError(null);\n      const response = await apiClient.changePassword(currentPassword, newPassword);\n      if (response.success) {\n        console.log('🔐 Contraseña cambiada exitosamente');\n        // Después de cambiar contraseña, el backend revoca todos los tokens\n        // Por lo que debemos limpiar el estado y redirigir al login\n        apiClient.clearTokens();\n        setUser(null);\n        return {\n          success: true,\n          message: 'Contraseña cambiada. Inicia sesión nuevamente.'\n        };\n      } else {\n        throw new Error(response.message || 'Error cambiando contraseña');\n      }\n    } catch (error) {\n      console.error('❌ Error cambiando contraseña:', error);\n      setError(error);\n      return {\n        success: false,\n        error: error.message || 'Error cambiando contraseña'\n      };\n    }\n  }, []);\n\n  // Función para subir foto de perfil\n  const uploadProfilePicture = useCallback(async file => {\n    try {\n      setError(null);\n      const response = await apiClient.uploadProfilePicture(file);\n      if (response.success) {\n        // Actualizar foto de perfil en el usuario actual\n        setUser(prevUser => ({\n          ...prevUser,\n          profilePhoto: response.profilePhoto\n        }));\n        console.log('📷 Foto de perfil actualizada');\n        return {\n          success: true,\n          profilePhoto: response.profilePhoto\n        };\n      } else {\n        throw new Error(response.message || 'Error subiendo foto');\n      }\n    } catch (error) {\n      console.error('❌ Error subiendo foto de perfil:', error);\n      setError(error);\n      return {\n        success: false,\n        error: error.message || 'Error subiendo foto de perfil'\n      };\n    }\n  }, []);\n\n  // Función para eliminar foto de perfil\n  const deleteProfilePicture = useCallback(async () => {\n    try {\n      setError(null);\n      const response = await apiClient.deleteProfilePicture();\n      if (response.success) {\n        // Limpiar foto de perfil del usuario actual\n        setUser(prevUser => ({\n          ...prevUser,\n          profilePhoto: {\n            url: null,\n            publicId: null\n          }\n        }));\n        console.log('🗑️ Foto de perfil eliminada');\n        return {\n          success: true\n        };\n      } else {\n        throw new Error(response.message || 'Error eliminando foto');\n      }\n    } catch (error) {\n      console.error('❌ Error eliminando foto de perfil:', error);\n      setError(error);\n      return {\n        success: false,\n        error: error.message || 'Error eliminando foto de perfil'\n      };\n    }\n  }, []);\n\n  // Función para obtener estadísticas del usuario\n  const getUserStats = useCallback(async () => {\n    try {\n      setError(null);\n      const response = await apiClient.getUserStats();\n      if (response.success) {\n        return {\n          success: true,\n          stats: response.stats\n        };\n      } else {\n        throw new Error(response.message || 'Error obteniendo estadísticas');\n      }\n    } catch (error) {\n      console.error('❌ Error obteniendo estadísticas:', error);\n      setError(error);\n      return {\n        success: false,\n        error: error.message || 'Error obteniendo estadísticas'\n      };\n    }\n  }, []);\n\n  // Función para refrescar datos del usuario\n  const refreshUser = useCallback(async () => {\n    try {\n      if (!apiClient.isAuthenticated()) {\n        setUser(null);\n        return {\n          success: false,\n          error: 'No autenticado'\n        };\n      }\n      const response = await apiClient.getProfile();\n      if (response.success) {\n        setUser(response.user);\n        return {\n          success: true,\n          user: response.user\n        };\n      } else {\n        throw new Error(response.message || 'Error refrescando usuario');\n      }\n    } catch (error) {\n      console.error('❌ Error refrescando usuario:', error);\n      setError(error);\n      return {\n        success: false,\n        error: error.message || 'Error refrescando datos'\n      };\n    }\n  }, []);\n\n  // Limpiar errores\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  // Valor del contexto\n  const value = {\n    // Estado\n    user,\n    loading,\n    error,\n    // Métodos de autenticación\n    register,\n    login,\n    logout,\n    // Métodos de perfil\n    updateProfile,\n    updateSettings,\n    changePassword,\n    uploadProfilePicture,\n    deleteProfilePicture,\n    // Métodos utilitarios\n    getUserStats,\n    refreshUser,\n    clearError,\n    // Estado de autenticación\n    isAuthenticated: !!user && !loading,\n    canUseP2P: (user === null || user === void 0 ? void 0 : (_user$verification = user.verification) === null || _user$verification === void 0 ? void 0 : _user$verification.phone) && (user === null || user === void 0 ? void 0 : (_user$verification2 = user.verification) === null || _user$verification2 === void 0 ? void 0 : _user$verification2.identity) && !(user !== null && user !== void 0 && (_user$suspension = user.suspension) !== null && _user$suspension !== void 0 && _user$suspension.suspended),\n    // Información del usuario\n    currentUser: user,\n    userRole: (user === null || user === void 0 ? void 0 : user.role) || 'user'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 10\n  }, this);\n}\n\n// Hook personalizado para usar el contexto\n_s(AuthProvider, \"tWSEuriaqg6HfDSVRcSWPk7ys7c=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\n// Hook para verificar si está autenticado (más simple)\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function useAuthState() {\n  _s3();\n  const {\n    user,\n    loading\n  } = useAuth();\n  return {\n    user,\n    loading,\n    isAuthenticated: !!user && !loading\n  };\n}\n_s3(useAuthState, \"EmJkapf7qiLC5Br5eCoEq4veZes=\", false, function () {\n  return [useAuth];\n});\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useCallback","backendAPI","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","_user$verification","_user$verification2","_user$suspension","user","setUser","loading","setLoading","error","setError","initializeAuth","apiClient","isAuthenticated","response","verifyToken","success","clearTokens","console","register","userData","log","username","Error","message","login","email","password","logout","updateProfile","profileData","updateSettings","settings","prevUser","changePassword","currentPassword","newPassword","uploadProfilePicture","file","profilePhoto","deleteProfilePicture","url","publicId","getUserStats","stats","refreshUser","getProfile","clearError","value","canUseP2P","verification","phone","identity","suspension","suspended","currentUser","userRole","role","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","undefined","useAuthState","_s3","$RefreshReg$"],"sources":["/home/frodev/Downloads/FroDev-CR-TropicalTCGPlayers/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\n// Nuevo contexto de autenticación que usa el backend Node.js en lugar de Firebase\n\nimport { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport backendAPI from '../services/backendAPI';\n\nconst AuthContext = createContext();\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Verificar token al cargar la aplicación\n  useEffect(() => {\n    const initializeAuth = async () => {\n      setLoading(true);\n      try {\n        if (apiClient.isAuthenticated()) {\n          // Verificar si el token es válido\n          const response = await apiClient.verifyToken();\n          if (response.success) {\n            setUser(response.user);\n          } else {\n            // Token inválido, limpiar\n            apiClient.clearTokens();\n            setUser(null);\n          }\n        } else {\n          setUser(null);\n        }\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n        // Si hay error verificando token, limpiar todo\n        apiClient.clearTokens();\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  // Función para registrar nuevo usuario\n  const register = useCallback(async (userData) => {\n    try {\n      setError(null);\n      setLoading(true);\n\n      const response = await apiClient.register(userData);\n      \n      if (response.success) {\n        setUser(response.user);\n        console.log('✅ Usuario registrado exitosamente:', response.user.username);\n        return { success: true, user: response.user };\n      } else {\n        throw new Error(response.message || 'Error en registro');\n      }\n    } catch (error) {\n      console.error('❌ Error en registro:', error);\n      setError(error);\n      return { \n        success: false, \n        error: error.message || 'Error registrando usuario' \n      };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Función para login\n  const login = useCallback(async (email, password) => {\n    try {\n      setError(null);\n      setLoading(true);\n\n      const response = await apiClient.login(email, password);\n      \n      if (response.success) {\n        setUser(response.user);\n        console.log('✅ Login exitoso:', response.user.username);\n        return { success: true, user: response.user };\n      } else {\n        throw new Error(response.message || 'Error en login');\n      }\n    } catch (error) {\n      console.error('❌ Error en login:', error);\n      setError(error);\n      return { \n        success: false, \n        error: error.message || 'Credenciales incorrectas' \n      };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Función para logout\n  const logout = useCallback(async () => {\n    try {\n      setLoading(true);\n      await apiClient.logout();\n      setUser(null);\n      console.log('👋 Logout exitoso');\n      return { success: true };\n    } catch (error) {\n      console.error('❌ Error en logout:', error);\n      // Aunque haya error en logout, limpiar estado local\n      setUser(null);\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Función para actualizar perfil\n  const updateProfile = useCallback(async (profileData) => {\n    try {\n      setError(null);\n      const response = await apiClient.updateProfile(profileData);\n      \n      if (response.success) {\n        setUser(response.user);\n        console.log('✅ Perfil actualizado');\n        return { success: true, user: response.user };\n      } else {\n        throw new Error(response.message || 'Error actualizando perfil');\n      }\n    } catch (error) {\n      console.error('❌ Error actualizando perfil:', error);\n      setError(error);\n      return { \n        success: false, \n        error: error.message || 'Error actualizando perfil' \n      };\n    }\n  }, []);\n\n  // Función para actualizar configuraciones\n  const updateSettings = useCallback(async (settings) => {\n    try {\n      setError(null);\n      const response = await apiClient.updateSettings(settings);\n      \n      if (response.success) {\n        // Actualizar settings en el usuario actual\n        setUser(prevUser => ({\n          ...prevUser,\n          settings: response.settings\n        }));\n        console.log('⚙️ Configuraciones actualizadas');\n        return { success: true, settings: response.settings };\n      } else {\n        throw new Error(response.message || 'Error actualizando configuraciones');\n      }\n    } catch (error) {\n      console.error('❌ Error actualizando configuraciones:', error);\n      setError(error);\n      return { \n        success: false, \n        error: error.message || 'Error actualizando configuraciones' \n      };\n    }\n  }, []);\n\n  // Función para cambiar contraseña\n  const changePassword = useCallback(async (currentPassword, newPassword) => {\n    try {\n      setError(null);\n      const response = await apiClient.changePassword(currentPassword, newPassword);\n      \n      if (response.success) {\n        console.log('🔐 Contraseña cambiada exitosamente');\n        // Después de cambiar contraseña, el backend revoca todos los tokens\n        // Por lo que debemos limpiar el estado y redirigir al login\n        apiClient.clearTokens();\n        setUser(null);\n        return { \n          success: true, \n          message: 'Contraseña cambiada. Inicia sesión nuevamente.' \n        };\n      } else {\n        throw new Error(response.message || 'Error cambiando contraseña');\n      }\n    } catch (error) {\n      console.error('❌ Error cambiando contraseña:', error);\n      setError(error);\n      return { \n        success: false, \n        error: error.message || 'Error cambiando contraseña' \n      };\n    }\n  }, []);\n\n  // Función para subir foto de perfil\n  const uploadProfilePicture = useCallback(async (file) => {\n    try {\n      setError(null);\n      const response = await apiClient.uploadProfilePicture(file);\n      \n      if (response.success) {\n        // Actualizar foto de perfil en el usuario actual\n        setUser(prevUser => ({\n          ...prevUser,\n          profilePhoto: response.profilePhoto\n        }));\n        console.log('📷 Foto de perfil actualizada');\n        return { success: true, profilePhoto: response.profilePhoto };\n      } else {\n        throw new Error(response.message || 'Error subiendo foto');\n      }\n    } catch (error) {\n      console.error('❌ Error subiendo foto de perfil:', error);\n      setError(error);\n      return { \n        success: false, \n        error: error.message || 'Error subiendo foto de perfil' \n      };\n    }\n  }, []);\n\n  // Función para eliminar foto de perfil\n  const deleteProfilePicture = useCallback(async () => {\n    try {\n      setError(null);\n      const response = await apiClient.deleteProfilePicture();\n      \n      if (response.success) {\n        // Limpiar foto de perfil del usuario actual\n        setUser(prevUser => ({\n          ...prevUser,\n          profilePhoto: { url: null, publicId: null }\n        }));\n        console.log('🗑️ Foto de perfil eliminada');\n        return { success: true };\n      } else {\n        throw new Error(response.message || 'Error eliminando foto');\n      }\n    } catch (error) {\n      console.error('❌ Error eliminando foto de perfil:', error);\n      setError(error);\n      return { \n        success: false, \n        error: error.message || 'Error eliminando foto de perfil' \n      };\n    }\n  }, []);\n\n  // Función para obtener estadísticas del usuario\n  const getUserStats = useCallback(async () => {\n    try {\n      setError(null);\n      const response = await apiClient.getUserStats();\n      \n      if (response.success) {\n        return { success: true, stats: response.stats };\n      } else {\n        throw new Error(response.message || 'Error obteniendo estadísticas');\n      }\n    } catch (error) {\n      console.error('❌ Error obteniendo estadísticas:', error);\n      setError(error);\n      return { \n        success: false, \n        error: error.message || 'Error obteniendo estadísticas' \n      };\n    }\n  }, []);\n\n  // Función para refrescar datos del usuario\n  const refreshUser = useCallback(async () => {\n    try {\n      if (!apiClient.isAuthenticated()) {\n        setUser(null);\n        return { success: false, error: 'No autenticado' };\n      }\n\n      const response = await apiClient.getProfile();\n      \n      if (response.success) {\n        setUser(response.user);\n        return { success: true, user: response.user };\n      } else {\n        throw new Error(response.message || 'Error refrescando usuario');\n      }\n    } catch (error) {\n      console.error('❌ Error refrescando usuario:', error);\n      setError(error);\n      return { \n        success: false, \n        error: error.message || 'Error refrescando datos' \n      };\n    }\n  }, []);\n\n  // Limpiar errores\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  // Valor del contexto\n  const value = {\n    // Estado\n    user,\n    loading,\n    error,\n    \n    // Métodos de autenticación\n    register,\n    login,\n    logout,\n    \n    // Métodos de perfil\n    updateProfile,\n    updateSettings,\n    changePassword,\n    uploadProfilePicture,\n    deleteProfilePicture,\n    \n    // Métodos utilitarios\n    getUserStats,\n    refreshUser,\n    clearError,\n    \n    // Estado de autenticación\n    isAuthenticated: !!user && !loading,\n    canUseP2P: user?.verification?.phone && user?.verification?.identity && !user?.suspension?.suspended,\n    \n    // Información del usuario\n    currentUser: user,\n    userRole: user?.role || 'user',\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\n// Hook personalizado para usar el contexto\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\n// Hook para verificar si está autenticado (más simple)\nexport function useAuthState() {\n  const { user, loading } = useAuth();\n  return { user, loading, isAuthenticated: !!user && !loading };\n}\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}