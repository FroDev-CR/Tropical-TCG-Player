{"ast":null,"code":"// src/pages/Marketplace.js\nimport{useState,useEffect,useCallback}from'react';import{Container,Row,Col,Card,Form,Spinner,Button,Pagination,Alert}from'react-bootstrap';import apiClient from'../services/api';import{motion}from'framer-motion';import{useCart}from'../contexts/CartContext';import{useAuthActions}from'../hooks/useAuthActions';import SellCardModal from'../components/SellCardModal';import MarketplaceFilters from'../components/MarketplaceFilters';import FeaturedSections from'../components/FeaturedSections';import CardDetailModalOptimized from'../components/CardDetailModalOptimized';import FloatingCart from'../components/FloatingCart';import{FaShoppingCart,FaWhatsapp,FaHeart,FaSearch,FaFilter}from'react-icons/fa';import apiSearchService from'../services/apiSearchService';// Configuración simple para mapear tipos de TCG\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TCG_GAMES={pokemon:{name:'Pokémon TCG'},onepiece:{name:'One Piece'},dragonball:{name:'Dragon Ball'},digimon:{name:'Digimon'},magic:{name:'Magic: The Gathering'},unionarena:{name:'Union Arena'},gundam:{name:'Gundam'},unknown:{name:'Desconocido'}};// Utility functions moved to CardDetailModal for better organization\nexport default function Marketplace(){var _TCG_GAMES$selectedTC2,_TCG_GAMES$selectedTC3;const[searchTerm,setSearchTerm]=useState('');const[selectedTCG,setSelectedTCG]=useState('');const[cards,setCards]=useState([]);const[loading,setLoading]=useState(false);const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(1);const[totalResults,setTotalResults]=useState(0);const[showSellModal,setShowSellModal]=useState(false);const[debounceTimer,setDebounceTimer]=useState(null);const[favorites,setFavorites]=useState([]);const[selectedCard,setSelectedCard]=useState(null);const[showCardModal,setShowCardModal]=useState(false);const[searchError,setSearchError]=useState('');// Nuevos estados para las funcionalidades mejoradas\nconst[showFilters,setShowFilters]=useState(false);const[filters,setFilters]=useState({tcgTypes:[],priceRange:null,conditions:[],rarities:[],minRating:0,sortBy:'newest'});const{addToCart}=useCart();const{protectedAction}=useAuthActions();const[latestListings,setLatestListings]=useState([]);// Función para aplicar filtros avanzados (actualizada para cartas unificadas)\nconst applyFilters=(cards,activeFilters)=>{let filtered=[...cards];// Filtro por TCG Types\nif(activeFilters.tcgTypes.length>0){filtered=filtered.filter(card=>activeFilters.tcgTypes.includes(card.tcgType));}// Filtro por precio (basado en precio promedio de la carta)\nif(activeFilters.priceRange){const priceRanges={'under10':{min:0,max:10},'10to25':{min:10,max:25},'25to50':{min:25,max:50},'50to100':{min:50,max:100},'over100':{min:100,max:9999}};const range=priceRanges[activeFilters.priceRange];if(range){filtered=filtered.filter(card=>{const price=card.averagePrice||card.minPrice||0;return price>=range.min&&price<=range.max;});}}// Filtro por condición (si tiene vendedores con esa condición)\nif(activeFilters.conditions.length>0){filtered=filtered.filter(card=>card.sellers&&card.sellers.some(seller=>activeFilters.conditions.includes(seller.condition)));}// Filtro por rareza\nif(activeFilters.rarities.length>0){filtered=filtered.filter(card=>activeFilters.rarities.includes(card.rarity));}// Filtro por rating mínimo del vendedor (simulado)\nif(activeFilters.minRating>0){// Por ahora simulamos el rating, después se puede implementar con datos reales\nfiltered=filtered.filter(()=>Math.random()>activeFilters.minRating/5-0.3);}// Filtro adicional: solo cartas con vendedores\nconst onlyWithSellers=activeFilters.onlyWithSellers||false;if(onlyWithSellers){filtered=filtered.filter(card=>card.sellers&&card.sellers.length>0);}// Ordenamiento\nswitch(activeFilters.sortBy){case'price-low':filtered.sort((a,b)=>(a.minPrice||0)-(b.minPrice||0));break;case'price-high':filtered.sort((a,b)=>(b.maxPrice||0)-(a.maxPrice||0));break;case'name-az':filtered.sort((a,b)=>a.name.localeCompare(b.name));break;case'name-za':filtered.sort((a,b)=>b.name.localeCompare(a.name));break;case'sellers-most':filtered.sort((a,b)=>{var _b$sellers,_a$sellers;return(((_b$sellers=b.sellers)===null||_b$sellers===void 0?void 0:_b$sellers.length)||0)-(((_a$sellers=a.sellers)===null||_a$sellers===void 0?void 0:_a$sellers.length)||0);});break;case'sellers-least':filtered.sort((a,b)=>{var _a$sellers2,_b$sellers2;return(((_a$sellers2=a.sellers)===null||_a$sellers2===void 0?void 0:_a$sellers2.length)||0)-(((_b$sellers2=b.sellers)===null||_b$sellers2===void 0?void 0:_b$sellers2.length)||0);});break;case'newest':default:// Ordenar por carta más reciente (basado en el listing más reciente)\nfiltered.sort((a,b)=>{var _a$sellers3,_b$sellers3;const aLatest=((_a$sellers3=a.sellers)===null||_a$sellers3===void 0?void 0:_a$sellers3.length)>0?Math.max(...a.sellers.map(s=>{var _s$createdAt;return((_s$createdAt=s.createdAt)===null||_s$createdAt===void 0?void 0:_s$createdAt.seconds)||0;})):0;const bLatest=((_b$sellers3=b.sellers)===null||_b$sellers3===void 0?void 0:_b$sellers3.length)>0?Math.max(...b.sellers.map(s=>{var _s$createdAt2;return((_s$createdAt2=s.createdAt)===null||_s$createdAt2===void 0?void 0:_s$createdAt2.seconds)||0;})):0;return bLatest-aLatest;});break;}return filtered;};// Contar filtros activos\nconst getActiveFiltersCount=()=>{let count=0;if(filters.tcgTypes.length>0)count++;if(filters.priceRange)count++;if(filters.conditions.length>0)count++;if(filters.rarities.length>0)count++;if(filters.minRating>0)count++;if(filters.sortBy!=='newest')count++;return count;};useEffect(()=>{const fetchLatestListings=async()=>{try{const response=await apiClient.get('/api/v1/listings',{params:{sortBy:'createdAt',page:1,limit:15}});if(response.data.success){setLatestListings(response.data.listings);}}catch(error){console.error('Error al obtener últimas cartas publicadas:',error);}};if(!searchTerm.trim()){fetchLatestListings();}},[searchTerm]);// Función simplificada - buscar en una sola API según el TCG seleccionado\nconst searchCardsUnified=async function(searchTerm,selectedTcg){let page=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;let pageSize=arguments.length>3&&arguments[3]!==undefined?arguments[3]:12;const sanitizedTerm=searchTerm.trim().toLowerCase().replace(/[^a-z0-9\\s\\-']/g,'').replace(/\\s+/g,' ');console.log(`🔍 Búsqueda en ${selectedTcg}: \"${sanitizedTerm}\"`);try{// Buscar en la API específica seleccionada\nconst apiResults=await apiSearchService.searchSpecificAPI(selectedTcg,sanitizedTerm,page,Math.max(pageSize,50)// Aumentar minídmo a 50 cartas\n);// Buscar vendedores locales en paralelo\nconst localSellers=await searchLocalSellers(sanitizedTerm);// Función para formatear información del set\nconst formatSetInfo=set=>{if(!set)return'Set desconocido';if(typeof set==='string')return set;if(typeof set==='object'&&set!==null){const name=set.name||'';const series=set.series||'';if(name&&series)return`${name}, ${series}`;else if(name)return name;else if(series)return series;else return'Set desconocido';}return String(set);};// Combinar resultados: agregar vendedores locales a las cartas de API\nconst enrichedCards=apiResults.cards.map(card=>{const cardSellers=localSellers.filter(seller=>seller.cardId===card.id||seller.cardName.toLowerCase().trim()===card.name.toLowerCase().trim());return{...card,// Formatear el objeto set correctamente\nset:{name:formatSetInfo(card.set)},sellers:cardSellers,hasLocalSellers:cardSellers.length>0};});return{cards:enrichedCards,totalResults:apiResults.totalResults,errors:apiResults.errors||[],page:apiResults.page,totalPages:apiResults.totalPages};}catch(error){console.error('Error en búsqueda específica:',error);// Fallback: buscar solo en vendedores locales\nconst localResults=await searchLocalSellers(sanitizedTerm);return{cards:convertListingsToCards(localResults),totalResults:localResults.length,errors:[{api:'Specific',error:`API de ${selectedTcg} falló, mostrando solo vendedores locales`}]};}};// Buscar solo en vendedores locales\nconst searchLocalSellers=async searchTerm=>{try{const response=await apiClient.get('/api/v1/listings',{params:{search:searchTerm,status:'active',sortBy:'createdAt',page:1,limit:100}});if(response.data.success){return response.data.listings;}return[];}catch(error){console.error('Error buscando vendedores locales:',error);return[];}};// Convertir listings a formato de cartas\nconst convertListingsToCards=listings=>{const cardMap=new Map();listings.forEach(listing=>{var _listing$sellerId,_listing$sellerId2,_listing$sellerId3;const cardId=listing.cardId||listing._id;if(!cardMap.has(cardId)){var _TCG_GAMES$listing$tc;cardMap.set(cardId,{id:cardId,name:listing.cardName,images:{small:listing.cardImage,large:listing.cardImage},set:{name:listing.setName||'Desconocido'},rarity:listing.rarity||'Sin rareza',tcgType:listing.tcgType||'unknown',tcgName:((_TCG_GAMES$listing$tc=TCG_GAMES[listing.tcgType])===null||_TCG_GAMES$listing$tc===void 0?void 0:_TCG_GAMES$listing$tc.name)||'Desconocido',sellers:[],hasLocalSellers:true});}const card=cardMap.get(cardId);card.sellers.push({listingId:listing._id,sellerId:((_listing$sellerId=listing.sellerId)===null||_listing$sellerId===void 0?void 0:_listing$sellerId._id)||listing.sellerId,sellerName:((_listing$sellerId2=listing.sellerId)===null||_listing$sellerId2===void 0?void 0:_listing$sellerId2.username)||listing.sellerName,price:listing.price,condition:listing.condition,quantity:listing.availableQuantity||listing.quantity||1,createdAt:listing.createdAt,userPhone:((_listing$sellerId3=listing.sellerId)===null||_listing$sellerId3===void 0?void 0:_listing$sellerId3.phone)||listing.userPhone});});return Array.from(cardMap.values());};// Función de búsqueda específica por TCG\nconst performSearch=useCallback(async function(term){let page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;if(!term.trim()){setCards([]);setTotalResults(0);setTotalPages(1);setCurrentPage(1);return;}if(!selectedTCG){setSearchError('⚠️ Selecciona un TCG antes de buscar');return;}setLoading(true);setSearchError('');try{// Búsqueda específica en el TCG seleccionado + vendedores locales  \nconst searchResults=await searchCardsUnified(term,selectedTCG,page,48);// Aumentar a 48 cartas por página\n// Procesar cartas y calcular precios de vendedores\nconst processedCards=searchResults.cards.map(card=>{if(card.sellers&&card.sellers.length>0){const prices=card.sellers.map(s=>s.price);const quantities=card.sellers.map(s=>s.quantity);card.minPrice=Math.min(...prices);card.maxPrice=Math.max(...prices);card.totalStock=quantities.reduce((sum,q)=>sum+q,0);const totalWeightedPrice=card.sellers.reduce((sum,seller)=>{return sum+seller.price*seller.quantity;},0);card.averagePrice=totalWeightedPrice/card.totalStock;// Ordenar vendedores por precio\ncard.sellers.sort((a,b)=>a.price-b.price);}return card;});// Aplicar filtros locales\nlet finalCards=applyFilters(processedCards,filters);setCards(finalCards);setTotalResults(searchResults.totalResults);setTotalPages(searchResults.totalPages||Math.ceil(finalCards.length/48));setCurrentPage(page);// Mostrar información sobre el estado de los datos\nif(searchResults.errors&&searchResults.errors.length>0){const errorMessages=searchResults.errors.map(err=>`${err.api}: ${err.error}`).join('; ');setSearchError(`⚠️ ${errorMessages}`);}if(finalCards.length===0){var _TCG_GAMES$selectedTC;setSearchError(`No se encontraron cartas de ${((_TCG_GAMES$selectedTC=TCG_GAMES[selectedTCG])===null||_TCG_GAMES$selectedTC===void 0?void 0:_TCG_GAMES$selectedTC.name)||selectedTCG} que coincidan con tu búsqueda.`);}console.log(`✅ Búsqueda en ${selectedTCG} completada: ${finalCards.length} cartas encontradas`);}catch(error){console.error('Error searching cards:',error);setCards([]);setTotalResults(0);setTotalPages(1);setSearchError('Error al buscar cartas. Verifica tu conexión e inténtalo de nuevo.');}setLoading(false);},[filters,selectedTCG]);// Paginación\nconst handlePagination=useCallback(newPage=>{if(newPage<1||newPage>totalPages)return;if(searchTerm.trim()){performSearch(searchTerm,newPage);}},[totalPages,searchTerm,performSearch]);// Debounced search\nconst handleSearchChange=value=>{setSearchTerm(value);setSearchError('');if(debounceTimer){clearTimeout(debounceTimer);}if(!value.trim()){setCards([]);setTotalResults(0);setTotalPages(1);setCurrentPage(1);return;}if(!selectedTCG){setSearchError('⚠️ Selecciona un TCG antes de buscar');return;}const timer=setTimeout(()=>{performSearch(value,1);},300);// Búsqueda rápida - solo 300ms\nsetDebounceTimer(timer);};// Cleanup debounce on unmount\nuseEffect(()=>{return()=>{if(debounceTimer){clearTimeout(debounceTimer);}};},[debounceTimer]);// Load favorites from localStorage\nuseEffect(()=>{const savedFavorites=localStorage.getItem('favorites');if(savedFavorites){setFavorites(JSON.parse(savedFavorites));}},[]);const toggleFavorite=cardId=>{const newFavorites=favorites.includes(cardId)?favorites.filter(id=>id!==cardId):[...favorites,cardId];setFavorites(newFavorites);localStorage.setItem('favorites',JSON.stringify(newFavorites));};const openCardModal=card=>{setSelectedCard(card);setShowCardModal(true);};const closeCardModal=()=>{setSelectedCard(null);setShowCardModal(false);};// Función para manejar cambios en filtros\nconst handleFiltersChange=newFilters=>{setFilters(newFilters);setCurrentPage(1);if(searchTerm.trim()){setTimeout(()=>performSearch(searchTerm,1),100);}};return/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0},animate:{opacity:1},transition:{duration:0.5},className:\"section\",children:[/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3 mb-md-0\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title mb-2\",children:\"\\uD83C\\uDFAF Marketplace TCG\"}),selectedTCG&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"badge bg-primary fs-6\",children:[\"Buscando en \",(_TCG_GAMES$selectedTC2=TCG_GAMES[selectedTCG])===null||_TCG_GAMES$selectedTC2===void 0?void 0:_TCG_GAMES$selectedTC2.name]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex gap-2\",children:/*#__PURE__*/_jsxs(Button,{variant:\"outline-light\",onClick:protectedAction(()=>setShowSellModal(true),'Debes iniciar sesión para vender cartas'),className:\"d-flex align-items-center gap-2 btn-lg\",style:{color:'white',borderColor:'white',backgroundColor:'transparent',fontSize:'1.1rem',padding:'0.75rem 1.5rem'},children:[/*#__PURE__*/_jsx(FaShoppingCart,{size:16}),\"Vender Cartas\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row align-items-center mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-12 col-md-4\",children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{className:\"fw-bold\",children:\"1. Selecciona el TCG\"}),/*#__PURE__*/_jsxs(Form.Select,{value:selectedTCG,onChange:e=>{setSelectedTCG(e.target.value);setSearchError('');setCards([]);},className:\"form-select-lg\",size:\"lg\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Elige un Trading Card Game\"}),Object.entries(TCG_GAMES).filter(_ref=>{let[key]=_ref;return key!=='unknown';}).map(_ref2=>{let[key,tcg]=_ref2;return/*#__PURE__*/_jsx(\"option\",{value:key,children:tcg.name},key);})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-12 col-md-8\",children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{className:\"fw-bold\",children:\"2. Buscar cartas\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:selectedTCG?`🔍 Buscar cartas de ${(_TCG_GAMES$selectedTC3=TCG_GAMES[selectedTCG])===null||_TCG_GAMES$selectedTC3===void 0?void 0:_TCG_GAMES$selectedTC3.name}...`:\"Selecciona un TCG primero\",value:searchTerm,onChange:e=>handleSearchChange(e.target.value),onKeyPress:e=>e.key==='Enter'&&searchTerm.trim()&&selectedTCG&&performSearch(searchTerm,1),className:\"form-control-lg\",disabled:!selectedTCG}),/*#__PURE__*/_jsxs(Button,{variant:\"outline-secondary\",onClick:()=>setShowFilters(!showFilters),className:\"btn-lg d-flex align-items-center gap-2\",title:\"Filtros avanzados\",disabled:!selectedTCG,children:[/*#__PURE__*/_jsx(FaFilter,{}),getActiveFiltersCount()>0&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-primary\",children:getActiveFiltersCount()}),/*#__PURE__*/_jsx(\"span\",{className:\"d-none d-md-inline\",children:\"Filtros\"})]}),/*#__PURE__*/_jsxs(Button,{onClick:()=>searchTerm.trim()&&selectedTCG&&performSearch(searchTerm,1),disabled:loading||!searchTerm.trim()||!selectedTCG,variant:\"primary\",className:\"btn-lg\",children:[loading?/*#__PURE__*/_jsx(Spinner,{size:\"sm\",animation:\"border\",role:\"status\"}):/*#__PURE__*/_jsx(FaSearch,{size:14}),/*#__PURE__*/_jsx(\"span\",{className:\"d-none d-sm-inline ms-2\",children:loading?'Buscando...':'Buscar'})]})]})]})})]}),searchError&&/*#__PURE__*/_jsxs(Alert,{variant:searchError.includes('demostración')?\"info\":\"warning\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"strong\",{children:searchError.includes('demostración')?'💡 Información:':'⚠️ Atención:'}),\" \",searchError,searchError.includes('demostración')&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 small\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Para acceder a datos reales:\"}),\" Configura las API keys en las variables de entorno y cambia \",/*#__PURE__*/_jsx(\"code\",{children:\"useMockData\"}),\" a \",/*#__PURE__*/_jsx(\"code\",{children:\"false\"}),\" en el servicio.\"]})]}),totalResults>0&&/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-muted small\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Cartas encontradas:\"}),\" Mostrando \",(currentPage-1)*48+1,\" - \",Math.min(currentPage*48,cards.length),\" de \",totalResults,\" resultados\",/*#__PURE__*/_jsx(\"span\",{className:\"ms-2\",children:searchError.includes('demostración')?'🎭 Datos de demostración':'📡'})]})})]}),/*#__PURE__*/_jsxs(Row,{className:\"g-4\",children:[showFilters&&/*#__PURE__*/_jsx(Col,{lg:3,children:/*#__PURE__*/_jsx(MarketplaceFilters,{filters:filters,onFiltersChange:handleFiltersChange,activeFiltersCount:getActiveFiltersCount()})}),/*#__PURE__*/_jsxs(Col,{lg:showFilters?9:12,children:[!searchTerm.trim()&&!getActiveFiltersCount()&&/*#__PURE__*/_jsx(FeaturedSections,{onViewCard:openCardModal}),cards.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsxs(Pagination,{className:\"justify-content-center\",children:[/*#__PURE__*/_jsx(Pagination.Prev,{disabled:currentPage===1,onClick:()=>handlePagination(currentPage-1),\"aria-label\":\"P\\xE1gina anterior\"}),(()=>{const pages=[];const maxVisible=5;let startPage=Math.max(1,currentPage-Math.floor(maxVisible/2));let endPage=Math.min(totalPages,startPage+maxVisible-1);if(endPage-startPage<maxVisible-1){startPage=Math.max(1,endPage-maxVisible+1);}if(startPage>1){pages.push(/*#__PURE__*/_jsx(Pagination.Item,{onClick:()=>handlePagination(1),children:\"1\"},1));if(startPage>2){pages.push(/*#__PURE__*/_jsx(Pagination.Ellipsis,{},\"start-ellipsis\"));}}for(let i=startPage;i<=endPage;i++){pages.push(/*#__PURE__*/_jsx(Pagination.Item,{active:i===currentPage,onClick:()=>handlePagination(i),children:i},i));}if(endPage<totalPages){if(endPage<totalPages-1){pages.push(/*#__PURE__*/_jsx(Pagination.Ellipsis,{},\"end-ellipsis\"));}pages.push(/*#__PURE__*/_jsx(Pagination.Item,{onClick:()=>handlePagination(totalPages),children:totalPages},totalPages));}return pages;})(),/*#__PURE__*/_jsx(Pagination.Next,{disabled:currentPage===totalPages,onClick:()=>handlePagination(currentPage+1),\"aria-label\":\"P\\xE1gina siguiente\"})]})}),/*#__PURE__*/_jsx(Row,{className:\"g-4\",children:cards.map(card=>{var _card$images;return/*#__PURE__*/_jsx(Col,{md:6,lg:4,className:\"mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"simplified-marketplace-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"simplified-card-image-wrapper\",onClick:()=>openCardModal(card),children:[/*#__PURE__*/_jsx(\"img\",{src:((_card$images=card.images)===null||_card$images===void 0?void 0:_card$images.small)||'https://via.placeholder.com/300x400',alt:card.name,className:\"simplified-card-image\"}),/*#__PURE__*/_jsx(\"div\",{className:\"simplified-favorite-btn\",children:/*#__PURE__*/_jsx(Button,{variant:favorites.includes(card.id)?\"danger\":\"outline-light\",size:\"sm\",onClick:e=>{e.stopPropagation();protectedAction(()=>toggleFavorite(card.id),'Debes iniciar sesión para agregar cartas a favoritos')();},className:\"rounded-circle\",title:favorites.includes(card.id)?\"Quitar de favoritos\":\"Agregar a favoritos\",children:/*#__PURE__*/_jsx(FaHeart,{size:12})})})]}),card.sellers&&card.sellers.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"simplified-sellers-info\",children:/*#__PURE__*/_jsx(\"div\",{className:\"simplified-best-price\",children:/*#__PURE__*/_jsx(\"div\",{className:\"seller-info\",children:/*#__PURE__*/_jsx(\"small\",{className:\"seller-availability\",children:card.sellers.length===1?\"Vendedor con stock disponible\":`${card.sellers.length} vendedores con stock disponible`})})})})]})},card.id);})})]})]})]})]}),/*#__PURE__*/_jsx(SellCardModal,{show:showSellModal,handleClose:()=>setShowSellModal(false)}),/*#__PURE__*/_jsx(CardDetailModalOptimized,{show:showCardModal,onHide:closeCardModal,card:selectedCard}),/*#__PURE__*/_jsx(FloatingCart,{})]});}","map":{"version":3,"names":["useState","useEffect","useCallback","Container","Row","Col","Card","Form","Spinner","Button","Pagination","Alert","apiClient","motion","useCart","useAuthActions","SellCardModal","MarketplaceFilters","FeaturedSections","CardDetailModalOptimized","FloatingCart","FaShoppingCart","FaWhatsapp","FaHeart","FaSearch","FaFilter","apiSearchService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TCG_GAMES","pokemon","name","onepiece","dragonball","digimon","magic","unionarena","gundam","unknown","Marketplace","_TCG_GAMES$selectedTC2","_TCG_GAMES$selectedTC3","searchTerm","setSearchTerm","selectedTCG","setSelectedTCG","cards","setCards","loading","setLoading","currentPage","setCurrentPage","totalPages","setTotalPages","totalResults","setTotalResults","showSellModal","setShowSellModal","debounceTimer","setDebounceTimer","favorites","setFavorites","selectedCard","setSelectedCard","showCardModal","setShowCardModal","searchError","setSearchError","showFilters","setShowFilters","filters","setFilters","tcgTypes","priceRange","conditions","rarities","minRating","sortBy","addToCart","protectedAction","latestListings","setLatestListings","applyFilters","activeFilters","filtered","length","filter","card","includes","tcgType","priceRanges","min","max","range","price","averagePrice","minPrice","sellers","some","seller","condition","rarity","Math","random","onlyWithSellers","sort","a","b","maxPrice","localeCompare","_b$sellers","_a$sellers","_a$sellers2","_b$sellers2","_a$sellers3","_b$sellers3","aLatest","map","s","_s$createdAt","createdAt","seconds","bLatest","_s$createdAt2","getActiveFiltersCount","count","fetchLatestListings","response","get","params","page","limit","data","success","listings","error","console","trim","searchCardsUnified","selectedTcg","arguments","undefined","pageSize","sanitizedTerm","toLowerCase","replace","log","apiResults","searchSpecificAPI","localSellers","searchLocalSellers","formatSetInfo","set","series","String","enrichedCards","cardSellers","cardId","id","cardName","hasLocalSellers","errors","localResults","convertListingsToCards","api","search","status","cardMap","Map","forEach","listing","_listing$sellerId","_listing$sellerId2","_listing$sellerId3","_id","has","_TCG_GAMES$listing$tc","images","small","cardImage","large","setName","tcgName","push","listingId","sellerId","sellerName","username","quantity","availableQuantity","userPhone","phone","Array","from","values","performSearch","term","searchResults","processedCards","prices","quantities","totalStock","reduce","sum","q","totalWeightedPrice","finalCards","ceil","errorMessages","err","join","_TCG_GAMES$selectedTC","handlePagination","newPage","handleSearchChange","value","clearTimeout","timer","setTimeout","savedFavorites","localStorage","getItem","JSON","parse","toggleFavorite","newFavorites","setItem","stringify","openCardModal","closeCardModal","handleFiltersChange","newFilters","div","initial","opacity","animate","transition","duration","className","children","variant","onClick","style","color","borderColor","backgroundColor","fontSize","padding","size","Group","Label","Select","onChange","e","target","Object","entries","_ref","key","_ref2","tcg","Control","type","placeholder","onKeyPress","disabled","title","animation","role","lg","onFiltersChange","activeFiltersCount","onViewCard","Prev","pages","maxVisible","startPage","floor","endPage","Item","Ellipsis","i","active","Next","_card$images","md","src","alt","stopPropagation","show","handleClose","onHide"],"sources":["/home/frodev/Downloads/FroDev-CR-TropicalTCGPlayers/src/pages/Marketplace.js"],"sourcesContent":["// src/pages/Marketplace.js\nimport { useState, useEffect, useCallback } from 'react';\nimport { Container, Row, Col, Card, Form, Spinner, Button, Pagination, Alert } from 'react-bootstrap';\nimport apiClient from '../services/api';\nimport { motion } from 'framer-motion';\nimport { useCart } from '../contexts/CartContext';\nimport { useAuthActions } from '../hooks/useAuthActions';\nimport SellCardModal from '../components/SellCardModal';\nimport MarketplaceFilters from '../components/MarketplaceFilters';\nimport FeaturedSections from '../components/FeaturedSections';\nimport CardDetailModalOptimized from '../components/CardDetailModalOptimized';\nimport FloatingCart from '../components/FloatingCart';\nimport { FaShoppingCart, FaWhatsapp, FaHeart, FaSearch, FaFilter } from 'react-icons/fa';\nimport apiSearchService from '../services/apiSearchService';\n\n// Configuración simple para mapear tipos de TCG\nconst TCG_GAMES = {\n  pokemon: { name: 'Pokémon TCG' },\n  onepiece: { name: 'One Piece' },\n  dragonball: { name: 'Dragon Ball' },\n  digimon: { name: 'Digimon' },\n  magic: { name: 'Magic: The Gathering' },\n  unionarena: { name: 'Union Arena' },\n  gundam: { name: 'Gundam' },\n  unknown: { name: 'Desconocido' }\n};\n\n// Utility functions moved to CardDetailModal for better organization\n\nexport default function Marketplace() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedTCG, setSelectedTCG] = useState('');\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const [showSellModal, setShowSellModal] = useState(false);\n  const [debounceTimer, setDebounceTimer] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [showCardModal, setShowCardModal] = useState(false);\n  const [searchError, setSearchError] = useState('');\n  \n  // Nuevos estados para las funcionalidades mejoradas\n  const [showFilters, setShowFilters] = useState(false);\n  const [filters, setFilters] = useState({\n    tcgTypes: [],\n    priceRange: null,\n    conditions: [],\n    rarities: [],\n    minRating: 0,\n    sortBy: 'newest'\n  });\n  \n  \n  const { addToCart } = useCart();\n  const { protectedAction } = useAuthActions();\n\n  const [latestListings, setLatestListings] = useState([]);\n\n  // Función para aplicar filtros avanzados (actualizada para cartas unificadas)\n  const applyFilters = (cards, activeFilters) => {\n    let filtered = [...cards];\n\n    // Filtro por TCG Types\n    if (activeFilters.tcgTypes.length > 0) {\n      filtered = filtered.filter(card => \n        activeFilters.tcgTypes.includes(card.tcgType)\n      );\n    }\n\n    // Filtro por precio (basado en precio promedio de la carta)\n    if (activeFilters.priceRange) {\n      const priceRanges = {\n        'under10': { min: 0, max: 10 },\n        '10to25': { min: 10, max: 25 },\n        '25to50': { min: 25, max: 50 },\n        '50to100': { min: 50, max: 100 },\n        'over100': { min: 100, max: 9999 }\n      };\n      \n      const range = priceRanges[activeFilters.priceRange];\n      if (range) {\n        filtered = filtered.filter(card => {\n          const price = card.averagePrice || card.minPrice || 0;\n          return price >= range.min && price <= range.max;\n        });\n      }\n    }\n\n    // Filtro por condición (si tiene vendedores con esa condición)\n    if (activeFilters.conditions.length > 0) {\n      filtered = filtered.filter(card => \n        card.sellers && card.sellers.some(seller => \n          activeFilters.conditions.includes(seller.condition)\n        )\n      );\n    }\n\n    // Filtro por rareza\n    if (activeFilters.rarities.length > 0) {\n      filtered = filtered.filter(card => \n        activeFilters.rarities.includes(card.rarity)\n      );\n    }\n\n    // Filtro por rating mínimo del vendedor (simulado)\n    if (activeFilters.minRating > 0) {\n      // Por ahora simulamos el rating, después se puede implementar con datos reales\n      filtered = filtered.filter(() => Math.random() > (activeFilters.minRating / 5 - 0.3));\n    }\n\n    // Filtro adicional: solo cartas con vendedores\n    const onlyWithSellers = activeFilters.onlyWithSellers || false;\n    if (onlyWithSellers) {\n      filtered = filtered.filter(card => card.sellers && card.sellers.length > 0);\n    }\n\n    // Ordenamiento\n    switch (activeFilters.sortBy) {\n      case 'price-low':\n        filtered.sort((a, b) => (a.minPrice || 0) - (b.minPrice || 0));\n        break;\n      case 'price-high':\n        filtered.sort((a, b) => (b.maxPrice || 0) - (a.maxPrice || 0));\n        break;\n      case 'name-az':\n        filtered.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n      case 'name-za':\n        filtered.sort((a, b) => b.name.localeCompare(a.name));\n        break;\n      case 'sellers-most':\n        filtered.sort((a, b) => (b.sellers?.length || 0) - (a.sellers?.length || 0));\n        break;\n      case 'sellers-least':\n        filtered.sort((a, b) => (a.sellers?.length || 0) - (b.sellers?.length || 0));\n        break;\n      case 'newest':\n      default:\n        // Ordenar por carta más reciente (basado en el listing más reciente)\n        filtered.sort((a, b) => {\n          const aLatest = a.sellers?.length > 0 ? Math.max(...a.sellers.map(s => s.createdAt?.seconds || 0)) : 0;\n          const bLatest = b.sellers?.length > 0 ? Math.max(...b.sellers.map(s => s.createdAt?.seconds || 0)) : 0;\n          return bLatest - aLatest;\n        });\n        break;\n    }\n\n    return filtered;\n  };\n\n  // Contar filtros activos\n  const getActiveFiltersCount = () => {\n    let count = 0;\n    if (filters.tcgTypes.length > 0) count++;\n    if (filters.priceRange) count++;\n    if (filters.conditions.length > 0) count++;\n    if (filters.rarities.length > 0) count++;\n    if (filters.minRating > 0) count++;\n    if (filters.sortBy !== 'newest') count++;\n    return count;\n  };\n\n  useEffect(() => {\n    const fetchLatestListings = async () => {\n      try {\n        const response = await apiClient.get('/api/v1/listings', {\n          params: {\n            sortBy: 'createdAt',\n            page: 1,\n            limit: 15\n          }\n        });\n        \n        if (response.data.success) {\n          setLatestListings(response.data.listings);\n        }\n      } catch (error) {\n        console.error('Error al obtener últimas cartas publicadas:', error);\n      }\n    };\n    \n    if (!searchTerm.trim()) {\n      fetchLatestListings();\n    }\n  }, [searchTerm]);\n\n  // Función simplificada - buscar en una sola API según el TCG seleccionado\n  const searchCardsUnified = async (searchTerm, selectedTcg, page = 1, pageSize = 12) => {\n    const sanitizedTerm = searchTerm\n      .trim()\n      .toLowerCase()\n      .replace(/[^a-z0-9\\s\\-']/g, '')\n      .replace(/\\s+/g, ' ');\n    \n    console.log(`🔍 Búsqueda en ${selectedTcg}: \"${sanitizedTerm}\"`);\n    \n    try {\n      // Buscar en la API específica seleccionada\n      const apiResults = await apiSearchService.searchSpecificAPI(\n        selectedTcg,\n        sanitizedTerm, \n        page, \n        Math.max(pageSize, 50) // Aumentar minídmo a 50 cartas\n      );\n      \n      // Buscar vendedores locales en paralelo\n      const localSellers = await searchLocalSellers(sanitizedTerm);\n      \n      // Función para formatear información del set\n      const formatSetInfo = (set) => {\n        if (!set) return 'Set desconocido';\n        if (typeof set === 'string') return set;\n        if (typeof set === 'object' && set !== null) {\n          const name = set.name || '';\n          const series = set.series || '';\n          if (name && series) return `${name}, ${series}`;\n          else if (name) return name;\n          else if (series) return series;\n          else return 'Set desconocido';\n        }\n        return String(set);\n      };\n\n      // Combinar resultados: agregar vendedores locales a las cartas de API\n      const enrichedCards = apiResults.cards.map(card => {\n        const cardSellers = localSellers.filter(seller => \n          seller.cardId === card.id || \n          (seller.cardName.toLowerCase().trim() === card.name.toLowerCase().trim())\n        );\n        \n        return {\n          ...card,\n          // Formatear el objeto set correctamente\n          set: { name: formatSetInfo(card.set) },\n          sellers: cardSellers,\n          hasLocalSellers: cardSellers.length > 0\n        };\n      });\n      \n      return {\n        cards: enrichedCards,\n        totalResults: apiResults.totalResults,\n        errors: apiResults.errors || [],\n        page: apiResults.page,\n        totalPages: apiResults.totalPages\n      };\n      \n    } catch (error) {\n      console.error('Error en búsqueda específica:', error);\n      // Fallback: buscar solo en vendedores locales\n      const localResults = await searchLocalSellers(sanitizedTerm);\n      return {\n        cards: convertListingsToCards(localResults),\n        totalResults: localResults.length,\n        errors: [{ api: 'Specific', error: `API de ${selectedTcg} falló, mostrando solo vendedores locales` }]\n      };\n    }\n  };\n  \n  // Buscar solo en vendedores locales\n  const searchLocalSellers = async (searchTerm) => {\n    try {\n      const response = await apiClient.get('/api/v1/listings', {\n        params: {\n          search: searchTerm,\n          status: 'active',\n          sortBy: 'createdAt',\n          page: 1,\n          limit: 100\n        }\n      });\n      \n      if (response.data.success) {\n        return response.data.listings;\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('Error buscando vendedores locales:', error);\n      return [];\n    }\n  };\n  \n  // Convertir listings a formato de cartas\n  const convertListingsToCards = (listings) => {\n    const cardMap = new Map();\n    \n    listings.forEach(listing => {\n      const cardId = listing.cardId || listing._id;\n      \n      if (!cardMap.has(cardId)) {\n        cardMap.set(cardId, {\n          id: cardId,\n          name: listing.cardName,\n          images: { small: listing.cardImage, large: listing.cardImage },\n          set: { name: listing.setName || 'Desconocido' },\n          rarity: listing.rarity || 'Sin rareza',\n          tcgType: listing.tcgType || 'unknown',\n          tcgName: TCG_GAMES[listing.tcgType]?.name || 'Desconocido',\n          sellers: [],\n          hasLocalSellers: true\n        });\n      }\n      \n      const card = cardMap.get(cardId);\n      card.sellers.push({\n        listingId: listing._id,\n        sellerId: listing.sellerId?._id || listing.sellerId,\n        sellerName: listing.sellerId?.username || listing.sellerName,\n        price: listing.price,\n        condition: listing.condition,\n        quantity: listing.availableQuantity || listing.quantity || 1,\n        createdAt: listing.createdAt,\n        userPhone: listing.sellerId?.phone || listing.userPhone\n      });\n    });\n    \n    return Array.from(cardMap.values());\n  };\n\n\n  // Función de búsqueda específica por TCG\n  const performSearch = useCallback(async (term, page = 1) => {\n    if (!term.trim()) {\n      setCards([]);\n      setTotalResults(0);\n      setTotalPages(1);\n      setCurrentPage(1);\n      return;\n    }\n\n    if (!selectedTCG) {\n      setSearchError('⚠️ Selecciona un TCG antes de buscar');\n      return;\n    }\n\n    setLoading(true);\n    setSearchError('');\n    \n    try {\n      // Búsqueda específica en el TCG seleccionado + vendedores locales  \n      const searchResults = await searchCardsUnified(term, selectedTCG, page, 48); // Aumentar a 48 cartas por página\n      \n      // Procesar cartas y calcular precios de vendedores\n      const processedCards = searchResults.cards.map(card => {\n        if (card.sellers && card.sellers.length > 0) {\n          const prices = card.sellers.map(s => s.price);\n          const quantities = card.sellers.map(s => s.quantity);\n          \n          card.minPrice = Math.min(...prices);\n          card.maxPrice = Math.max(...prices);\n          card.totalStock = quantities.reduce((sum, q) => sum + q, 0);\n          \n          const totalWeightedPrice = card.sellers.reduce((sum, seller) => {\n            return sum + (seller.price * seller.quantity);\n          }, 0);\n          card.averagePrice = totalWeightedPrice / card.totalStock;\n          \n          // Ordenar vendedores por precio\n          card.sellers.sort((a, b) => a.price - b.price);\n        }\n        \n        return card;\n      });\n      \n      // Aplicar filtros locales\n      let finalCards = applyFilters(processedCards, filters);\n\n      setCards(finalCards);\n      setTotalResults(searchResults.totalResults);\n      setTotalPages(searchResults.totalPages || Math.ceil(finalCards.length / 48));\n      setCurrentPage(page);\n\n      // Mostrar información sobre el estado de los datos\n      if (searchResults.errors && searchResults.errors.length > 0) {\n        const errorMessages = searchResults.errors.map(err => `${err.api}: ${err.error}`).join('; ');\n        setSearchError(`⚠️ ${errorMessages}`);\n      }\n      \n      if (finalCards.length === 0) {\n        setSearchError(`No se encontraron cartas de ${TCG_GAMES[selectedTCG]?.name || selectedTCG} que coincidan con tu búsqueda.`);\n      }\n\n      console.log(`✅ Búsqueda en ${selectedTCG} completada: ${finalCards.length} cartas encontradas`);\n\n    } catch (error) {\n      console.error('Error searching cards:', error);\n      setCards([]);\n      setTotalResults(0);\n      setTotalPages(1);\n      setSearchError('Error al buscar cartas. Verifica tu conexión e inténtalo de nuevo.');\n    }\n    setLoading(false);\n  }, [filters, selectedTCG]);\n\n  // Paginación\n  const handlePagination = useCallback((newPage) => {\n    if (newPage < 1 || newPage > totalPages) return;\n    if (searchTerm.trim()) {\n      performSearch(searchTerm, newPage);\n    }\n  }, [totalPages, searchTerm, performSearch]);\n\n  // Debounced search\n  const handleSearchChange = (value) => {\n    setSearchTerm(value);\n    setSearchError('');\n    \n    if (debounceTimer) {\n      clearTimeout(debounceTimer);\n    }\n    \n    if (!value.trim()) {\n      setCards([]);\n      setTotalResults(0);\n      setTotalPages(1);\n      setCurrentPage(1);\n      return;\n    }\n    \n    if (!selectedTCG) {\n      setSearchError('⚠️ Selecciona un TCG antes de buscar');\n      return;\n    }\n    \n    const timer = setTimeout(() => {\n      performSearch(value, 1);\n    }, 300); // Búsqueda rápida - solo 300ms\n    \n    setDebounceTimer(timer);\n  };\n\n  // Cleanup debounce on unmount\n  useEffect(() => {\n    return () => {\n      if (debounceTimer) {\n        clearTimeout(debounceTimer);\n      }\n    };\n  }, [debounceTimer]);\n\n  // Load favorites from localStorage\n  useEffect(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    if (savedFavorites) {\n      setFavorites(JSON.parse(savedFavorites));\n    }\n  }, []);\n\n  const toggleFavorite = (cardId) => {\n    const newFavorites = favorites.includes(cardId) \n      ? favorites.filter(id => id !== cardId)\n      : [...favorites, cardId];\n    \n    setFavorites(newFavorites);\n    localStorage.setItem('favorites', JSON.stringify(newFavorites));\n  };\n\n  const openCardModal = (card) => {\n    setSelectedCard(card);\n    setShowCardModal(true);\n  };\n\n  const closeCardModal = () => {\n    setSelectedCard(null);\n    setShowCardModal(false);\n  };\n\n\n  // Función para manejar cambios en filtros\n  const handleFiltersChange = (newFilters) => {\n    setFilters(newFilters);\n    setCurrentPage(1);\n    if (searchTerm.trim()) {\n      setTimeout(() => performSearch(searchTerm, 1), 100);\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n      className=\"section\"\n    >\n      <Container>\n        {/* Header del Marketplace */}\n        <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4\">\n          <div className=\"mb-3 mb-md-0\">\n            <h2 className=\"section-title mb-2\">🎯 Marketplace TCG</h2>\n            {selectedTCG && (\n              <div className=\"mt-2\">\n                <span className=\"badge bg-primary fs-6\">\n                  Buscando en {TCG_GAMES[selectedTCG]?.name}\n                </span>\n              </div>\n            )}\n          </div>\n          <div className=\"d-flex gap-2\">\n            <Button \n              variant=\"outline-light\" \n              onClick={protectedAction(\n                () => setShowSellModal(true),\n                'Debes iniciar sesión para vender cartas'\n              )}\n              className=\"d-flex align-items-center gap-2 btn-lg\"\n              style={{\n                color: 'white',\n                borderColor: 'white',\n                backgroundColor: 'transparent',\n                fontSize: '1.1rem',\n                padding: '0.75rem 1.5rem'\n              }}\n            >\n              <FaShoppingCart size={16} />\n              Vender Cartas\n            </Button>\n          </div>\n        </div>\n\n\n        {/* Selector de TCG obligatorio */}\n        <div className=\"mb-4\">\n          <div className=\"row align-items-center mb-3\">\n            <div className=\"col-12 col-md-4\">\n              <Form.Group>\n                <Form.Label className=\"fw-bold\">1. Selecciona el TCG</Form.Label>\n                <Form.Select\n                  value={selectedTCG}\n                  onChange={(e) => {\n                    setSelectedTCG(e.target.value);\n                    setSearchError('');\n                    setCards([]);\n                  }}\n                  className=\"form-select-lg\"\n                  size=\"lg\"\n                >\n                  <option value=\"\">Elige un Trading Card Game</option>\n                  {Object.entries(TCG_GAMES).filter(([key]) => key !== 'unknown').map(([key, tcg]) => (\n                    <option key={key} value={key}>\n                      {tcg.name}\n                    </option>\n                  ))}\n                </Form.Select>\n              </Form.Group>\n            </div>\n            <div className=\"col-12 col-md-8\">\n              <Form.Group>\n                <Form.Label className=\"fw-bold\">2. Buscar cartas</Form.Label>\n                <div className=\"input-group\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder={selectedTCG ? `🔍 Buscar cartas de ${TCG_GAMES[selectedTCG]?.name}...` : \"Selecciona un TCG primero\"}\n                    value={searchTerm}\n                    onChange={(e) => handleSearchChange(e.target.value)}\n                    onKeyPress={(e) => e.key === 'Enter' && searchTerm.trim() && selectedTCG && performSearch(searchTerm, 1)}\n                    className=\"form-control-lg\"\n                    disabled={!selectedTCG}\n                  />\n                  <Button \n                    variant=\"outline-secondary\"\n                    onClick={() => setShowFilters(!showFilters)}\n                    className=\"btn-lg d-flex align-items-center gap-2\"\n                    title=\"Filtros avanzados\"\n                    disabled={!selectedTCG}\n                  >\n                    <FaFilter />\n                    {getActiveFiltersCount() > 0 && (\n                      <span className=\"badge bg-primary\">{getActiveFiltersCount()}</span>\n                    )}\n                    <span className=\"d-none d-md-inline\">Filtros</span>\n                  </Button>\n                  <Button \n                    onClick={() => searchTerm.trim() && selectedTCG && performSearch(searchTerm, 1)} \n                    disabled={loading || !searchTerm.trim() || !selectedTCG}\n                    variant=\"primary\"\n                    className=\"btn-lg\"\n                  >\n                    {loading ? (\n                      <Spinner size=\"sm\" animation=\"border\" role=\"status\" />\n                    ) : (\n                      <FaSearch size={14} />\n                    )}\n                    <span className=\"d-none d-sm-inline ms-2\">\n                      {loading ? 'Buscando...' : 'Buscar'}\n                    </span>\n                  </Button>\n                </div>\n              </Form.Group>\n            </div>\n          </div>\n          \n\n          {/* Mostrar información sobre el estado de los datos */}\n          {searchError && (\n            <Alert \n              variant={searchError.includes('demostración') ? \"info\" : \"warning\"} \n              className=\"mb-3\"\n            >\n              <strong>\n                {searchError.includes('demostración') ? '💡 Información:' : '⚠️ Atención:'}\n              </strong> {searchError}\n              {searchError.includes('demostración') && (\n                <div className=\"mt-2 small\">\n                  <strong>Para acceder a datos reales:</strong> Configura las API keys en las variables de entorno y cambia <code>useMockData</code> a <code>false</code> en el servicio.\n                </div>\n              )}\n            </Alert>\n          )}\n          \n          {totalResults > 0 && (\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <div className=\"text-muted small\">\n                <strong>Cartas encontradas:</strong> Mostrando {(currentPage - 1) * 48 + 1} - {Math.min(currentPage * 48, cards.length)} de {totalResults} resultados\n                <span className=\"ms-2\">\n                  {searchError.includes('demostración') ? \n                    '🎭 Datos de demostración' : \n                    '📡'\n                  }\n                </span>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Layout principal con sidebar de filtros */}\n        <Row className=\"g-4\">\n          {/* Sidebar de filtros */}\n          {showFilters && (\n            <Col lg={3}>\n              <MarketplaceFilters \n                filters={filters}\n                onFiltersChange={handleFiltersChange}\n                activeFiltersCount={getActiveFiltersCount()}\n              />\n            </Col>\n          )}\n          \n          {/* Contenido principal */}\n          <Col lg={showFilters ? 9 : 12}>\n            {/* Secciones destacadas (solo cuando no hay búsqueda activa) */}\n            {!searchTerm.trim() && !getActiveFiltersCount() && (\n              <FeaturedSections onViewCard={openCardModal} />\n            )}\n\n\n        {cards.length > 0 && (\n          <>\n            <div className=\"mb-4\">\n              <Pagination className=\"justify-content-center\">\n                <Pagination.Prev \n                  disabled={currentPage === 1} \n                  onClick={() => handlePagination(currentPage - 1)}\n                  aria-label=\"Página anterior\"\n                />\n                {(() => {\n                  const pages = [];\n                  const maxVisible = 5;\n                  let startPage = Math.max(1, currentPage - Math.floor(maxVisible / 2));\n                  let endPage = Math.min(totalPages, startPage + maxVisible - 1);\n                  \n                  if (endPage - startPage < maxVisible - 1) {\n                    startPage = Math.max(1, endPage - maxVisible + 1);\n                  }\n                  \n                  if (startPage > 1) {\n                    pages.push(\n                      <Pagination.Item key={1} onClick={() => handlePagination(1)}>\n                        1\n                      </Pagination.Item>\n                    );\n                    if (startPage > 2) {\n                      pages.push(<Pagination.Ellipsis key=\"start-ellipsis\" />);\n                    }\n                  }\n                  \n                  for (let i = startPage; i <= endPage; i++) {\n                    pages.push(\n                      <Pagination.Item\n                        key={i}\n                        active={i === currentPage}\n                        onClick={() => handlePagination(i)}\n                      >\n                        {i}\n                      </Pagination.Item>\n                    );\n                  }\n                  \n                  if (endPage < totalPages) {\n                    if (endPage < totalPages - 1) {\n                      pages.push(<Pagination.Ellipsis key=\"end-ellipsis\" />);\n                    }\n                    pages.push(\n                      <Pagination.Item key={totalPages} onClick={() => handlePagination(totalPages)}>\n                        {totalPages}\n                      </Pagination.Item>\n                    );\n                  }\n                  \n                  return pages;\n                })()}\n                <Pagination.Next \n                  disabled={currentPage === totalPages} \n                  onClick={() => handlePagination(currentPage + 1)}\n                  aria-label=\"Página siguiente\"\n                />\n              </Pagination>\n            </div>\n            <Row className=\"g-4\">\n              {cards.map(card => (\n                <Col key={card.id} md={6} lg={4} className=\"mb-4\">\n                  {/* Vista simplificada: solo imagen de carta + información de vendedores */}\n                  <div className=\"simplified-marketplace-card\">\n                    <div className=\"simplified-card-image-wrapper\" onClick={() => openCardModal(card)}>\n                      <img \n                        src={card.images?.small || 'https://via.placeholder.com/300x400'} \n                        alt={card.name}\n                        className=\"simplified-card-image\"\n                      />\n                      \n                      {/* Botón de favoritos flotante */}\n                      <div className=\"simplified-favorite-btn\">\n                        <Button\n                          variant={favorites.includes(card.id) ? \"danger\" : \"outline-light\"}\n                          size=\"sm\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            protectedAction(\n                              () => toggleFavorite(card.id),\n                              'Debes iniciar sesión para agregar cartas a favoritos'\n                            )();\n                          }}\n                          className=\"rounded-circle\"\n                          title={favorites.includes(card.id) ? \"Quitar de favoritos\" : \"Agregar a favoritos\"}\n                        >\n                          <FaHeart size={12} />\n                        </Button>\n                      </div>\n                    </div>\n                    \n                    {/* Información de vendedores solo si hay */}\n                    {card.sellers && card.sellers.length > 0 && (\n                      <div className=\"simplified-sellers-info\">\n                        <div className=\"simplified-best-price\">\n                          <div className=\"seller-info\">\n                            <small className=\"seller-availability\">\n                              {card.sellers.length === 1 ? \n                                \"Vendedor con stock disponible\" :\n                                `${card.sellers.length} vendedores con stock disponible`\n                              }\n                            </small>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </Col>\n              ))}\n            </Row>\n          </>\n        )}\n          </Col>\n        </Row>\n      </Container>\n\n      <SellCardModal show={showSellModal} handleClose={() => setShowSellModal(false)} />\n      \n      {/* Modal de Detalle de Carta - Componente optimizado para móviles */}\n      <CardDetailModalOptimized \n        show={showCardModal}\n        onHide={closeCardModal}\n        card={selectedCard}\n      />\n\n      {/* Carrito flotante */}\n      <FloatingCart />\n\n    </motion.div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}