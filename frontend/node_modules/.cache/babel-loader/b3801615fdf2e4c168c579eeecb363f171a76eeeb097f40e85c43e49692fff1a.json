{"ast":null,"code":"// Backend API Service\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000';class BackendAPI{constructor(){this.baseURL=API_BASE_URL;this.token=localStorage.getItem('accessToken');this.refreshToken=localStorage.getItem('refreshToken');}// Set tokens after login\nsetTokens(accessToken,refreshToken){this.token=accessToken;this.refreshToken=refreshToken;localStorage.setItem('accessToken',accessToken);localStorage.setItem('refreshToken',refreshToken);}// Clear tokens on logout\nclearTokens(){this.token=null;this.refreshToken=null;localStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');}// Get auth headers\ngetAuthHeaders(){const headers={'Content-Type':'application/json'};if(this.token){headers['Authorization']=`Bearer ${this.token}`;}return headers;}// Generic API request method\nasync request(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=`${this.baseURL}${endpoint}`;const config={headers:this.getAuthHeaders(),...options};try{const response=await fetch(url,config);const data=await response.json();if(!response.ok){throw new Error(data.message||'API request failed');}return data;}catch(error){console.error('API Error:',error);throw error;}}// GET request\nasync get(endpoint){return this.request(endpoint,{method:'GET'});}// POST request\nasync post(endpoint,body){return this.request(endpoint,{method:'POST',body:JSON.stringify(body)});}// PUT request\nasync put(endpoint,body){return this.request(endpoint,{method:'PUT',body:JSON.stringify(body)});}// DELETE request\nasync delete(endpoint){return this.request(endpoint,{method:'DELETE'});}// ========== AUTHENTICATION ENDPOINTS ==========\nasync register(userData){const response=await this.post('/api/v1/auth/register',userData);if(response.success&&response.tokens){this.setTokens(response.tokens.accessToken,response.tokens.refreshToken);}return response;}async login(email,password){const response=await this.post('/api/v1/auth/login',{email,password});if(response.success&&response.tokens){this.setTokens(response.tokens.accessToken,response.tokens.refreshToken);}return response;}async verifyToken(){return this.get('/api/v1/auth/verify');}async logout(){this.clearTokens();}// ========== USER ENDPOINTS ==========\nasync getProfile(){return this.get('/api/v1/users/profile');}async updateProfile(userData){return this.put('/api/v1/users/profile',userData);}async getUserListings(){return this.get('/api/v1/users/listings');}// ========== LISTING ENDPOINTS ==========\nasync getListings(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryString=new URLSearchParams(params).toString();const endpoint=`/api/v1/listings${queryString?`?${queryString}`:''}`;return this.get(endpoint);}async getListing(id){return this.get(`/api/v1/listings/${id}`);}async createListing(listingData){return this.post('/api/v1/listings',listingData);}async updateListing(id,listingData){return this.put(`/api/v1/listings/${id}`,listingData);}// ========== BINDER ENDPOINTS ==========\nasync getBinders(){return this.get('/api/v1/binders');}async getBinder(id){return this.get(`/api/v1/binders/${id}`);}async createBinder(binderData){return this.post('/api/v1/binders',binderData);}async updateBinder(id,binderData){return this.put(`/api/v1/binders/${id}`,binderData);}async addCardToBinder(binderId,cardData){return this.post(`/api/v1/binders/${binderId}/cards`,cardData);}// ========== TRANSACTION ENDPOINTS ==========\nasync getTransactions(){return this.get('/api/v1/transactions');}async createTransaction(transactionData){return this.post('/api/v1/transactions',transactionData);}async acceptTransaction(id,originStore){return this.put(`/api/v1/transactions/${id}/accept`,{originStore});}// ========== DASHBOARD ENDPOINTS ==========\nasync getDashboardStats(){return this.get('/api/v1/stats/dashboard');}// ========== HEALTH CHECK ==========\nasync healthCheck(){return this.get('/health');}}// Create and export a singleton instance\nconst backendAPI=new BackendAPI();export default backendAPI;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","BackendAPI","constructor","baseURL","token","localStorage","getItem","refreshToken","setTokens","accessToken","setItem","clearTokens","removeItem","getAuthHeaders","headers","request","endpoint","options","arguments","length","undefined","url","config","response","fetch","data","json","ok","Error","message","error","console","get","method","post","body","JSON","stringify","put","delete","register","userData","success","tokens","login","email","password","verifyToken","logout","getProfile","updateProfile","getUserListings","getListings","params","queryString","URLSearchParams","toString","getListing","id","createListing","listingData","updateListing","getBinders","getBinder","createBinder","binderData","updateBinder","addCardToBinder","binderId","cardData","getTransactions","createTransaction","transactionData","acceptTransaction","originStore","getDashboardStats","healthCheck","backendAPI"],"sources":["/home/frodev/Downloads/FroDev-CR-TropicalTCGPlayers/src/services/backendAPI.js"],"sourcesContent":["// Backend API Service\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nclass BackendAPI {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n    this.token = localStorage.getItem('accessToken');\n    this.refreshToken = localStorage.getItem('refreshToken');\n  }\n\n  // Set tokens after login\n  setTokens(accessToken, refreshToken) {\n    this.token = accessToken;\n    this.refreshToken = refreshToken;\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem('refreshToken', refreshToken);\n  }\n\n  // Clear tokens on logout\n  clearTokens() {\n    this.token = null;\n    this.refreshToken = null;\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n  }\n\n  // Get auth headers\n  getAuthHeaders() {\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n    \n    if (this.token) {\n      headers['Authorization'] = `Bearer ${this.token}`;\n    }\n    \n    return headers;\n  }\n\n  // Generic API request method\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: this.getAuthHeaders(),\n      ...options,\n    };\n\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'API request failed');\n      }\n\n      return data;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }\n\n  // GET request\n  async get(endpoint) {\n    return this.request(endpoint, { method: 'GET' });\n  }\n\n  // POST request\n  async post(endpoint, body) {\n    return this.request(endpoint, {\n      method: 'POST',\n      body: JSON.stringify(body),\n    });\n  }\n\n  // PUT request\n  async put(endpoint, body) {\n    return this.request(endpoint, {\n      method: 'PUT',\n      body: JSON.stringify(body),\n    });\n  }\n\n  // DELETE request\n  async delete(endpoint) {\n    return this.request(endpoint, { method: 'DELETE' });\n  }\n\n  // ========== AUTHENTICATION ENDPOINTS ==========\n\n  async register(userData) {\n    const response = await this.post('/api/v1/auth/register', userData);\n    if (response.success && response.tokens) {\n      this.setTokens(response.tokens.accessToken, response.tokens.refreshToken);\n    }\n    return response;\n  }\n\n  async login(email, password) {\n    const response = await this.post('/api/v1/auth/login', { email, password });\n    if (response.success && response.tokens) {\n      this.setTokens(response.tokens.accessToken, response.tokens.refreshToken);\n    }\n    return response;\n  }\n\n  async verifyToken() {\n    return this.get('/api/v1/auth/verify');\n  }\n\n  async logout() {\n    this.clearTokens();\n  }\n\n  // ========== USER ENDPOINTS ==========\n\n  async getProfile() {\n    return this.get('/api/v1/users/profile');\n  }\n\n  async updateProfile(userData) {\n    return this.put('/api/v1/users/profile', userData);\n  }\n\n  async getUserListings() {\n    return this.get('/api/v1/users/listings');\n  }\n\n  // ========== LISTING ENDPOINTS ==========\n\n  async getListings(params = {}) {\n    const queryString = new URLSearchParams(params).toString();\n    const endpoint = `/api/v1/listings${queryString ? `?${queryString}` : ''}`;\n    return this.get(endpoint);\n  }\n\n  async getListing(id) {\n    return this.get(`/api/v1/listings/${id}`);\n  }\n\n  async createListing(listingData) {\n    return this.post('/api/v1/listings', listingData);\n  }\n\n  async updateListing(id, listingData) {\n    return this.put(`/api/v1/listings/${id}`, listingData);\n  }\n\n  // ========== BINDER ENDPOINTS ==========\n\n  async getBinders() {\n    return this.get('/api/v1/binders');\n  }\n\n  async getBinder(id) {\n    return this.get(`/api/v1/binders/${id}`);\n  }\n\n  async createBinder(binderData) {\n    return this.post('/api/v1/binders', binderData);\n  }\n\n  async updateBinder(id, binderData) {\n    return this.put(`/api/v1/binders/${id}`, binderData);\n  }\n\n  async addCardToBinder(binderId, cardData) {\n    return this.post(`/api/v1/binders/${binderId}/cards`, cardData);\n  }\n\n  // ========== TRANSACTION ENDPOINTS ==========\n\n  async getTransactions() {\n    return this.get('/api/v1/transactions');\n  }\n\n  async createTransaction(transactionData) {\n    return this.post('/api/v1/transactions', transactionData);\n  }\n\n  async acceptTransaction(id, originStore) {\n    return this.put(`/api/v1/transactions/${id}/accept`, { originStore });\n  }\n\n  // ========== DASHBOARD ENDPOINTS ==========\n\n  async getDashboardStats() {\n    return this.get('/api/v1/stats/dashboard');\n  }\n\n  // ========== HEALTH CHECK ==========\n\n  async healthCheck() {\n    return this.get('/health');\n  }\n}\n\n// Create and export a singleton instance\nconst backendAPI = new BackendAPI();\nexport default backendAPI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}