{"ast":null,"code":"// src/hooks/useP2PTransactions.js\n// Hook personalizado para manejar transacciones P2P\nimport{useState,useEffect}from'react';import{useTransactions}from'../contexts/TransactionContext';import{useCart}from'../contexts/CartContext';export function useP2PTransactions(){const{transactions,buyerTransactions,sellerTransactions,loading,unreadNotifications,getTransactionDetails,acceptTransaction,rejectTransaction,confirmDelivery,requestPayment,confirmPaymentReceived,confirmReceipt,submitRating,createDispute,markAsRead,getTransactionStatusText,getAvailableActions,requiresUrgentAttention,getTimeRemaining}=useTransactions();const{checkAtomicAvailability,createPendingTransaction,getCartByVendor}=useCart();const[actionLoading,setActionLoading]=useState(false);const[error,setError]=useState(null);// ===============================================\n// FUNCIONES DE TRANSACCIONES\n// ===============================================\n// Crear transacciones P2P para múltiples vendedores\nconst createP2PTransactions=async function(){let contactMethod=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'whatsapp';let buyerNotes=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';setActionLoading(true);setError(null);try{const vendors=getCartByVendor();const results=[];for(const vendor of vendors){try{const result=await createPendingTransaction(vendor.items,contactMethod,buyerNotes);results.push({vendorId:vendor.vendorId,vendorName:vendor.vendorName,success:true,transactionId:result.transactionId,data:result});}catch(error){results.push({vendorId:vendor.vendorId,vendorName:vendor.vendorName,success:false,error:error.message});}}return results;}catch(error){setError(error.message);throw error;}finally{setActionLoading(false);}};// Responder a una transacción como vendedor\nconst handleSellerResponse=async function(transactionId,action){let responseData=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};setActionLoading(true);setError(null);try{let result;if(action==='accept'){result=await acceptTransaction(transactionId,responseData);}else if(action==='reject'){result=await rejectTransaction(transactionId,responseData.reason||'');}else{throw new Error('Acción no válida');}await markAsRead(transactionId);return result;}catch(error){setError(error.message);throw error;}finally{setActionLoading(false);}};// Confirmar entrega como vendedor\nconst handleDeliveryConfirmation=async(transactionId,deliveryData)=>{setActionLoading(true);setError(null);try{const result=await confirmDelivery(transactionId,deliveryData);await markAsRead(transactionId);return result;}catch(error){setError(error.message);throw error;}finally{setActionLoading(false);}};// Confirmar pago recibido como vendedor\nconst handlePaymentConfirmation=async(transactionId,paymentProof)=>{setActionLoading(true);setError(null);try{const result=await confirmPaymentReceived(transactionId,paymentProof);await markAsRead(transactionId);return result;}catch(error){setError(error.message);throw error;}finally{setActionLoading(false);}};// Confirmar recibo como comprador\nconst handleReceiptConfirmation=async(transactionId,receiptData)=>{setActionLoading(true);setError(null);try{const result=await confirmReceipt(transactionId,receiptData);await markAsRead(transactionId);return result;}catch(error){setError(error.message);throw error;}finally{setActionLoading(false);}};// Enviar calificación\nconst handleRatingSubmission=async(transactionId,ratingData)=>{setActionLoading(true);setError(null);try{const result=await submitRating(transactionId,ratingData);await markAsRead(transactionId);return result;}catch(error){setError(error.message);throw error;}finally{setActionLoading(false);}};// Crear disputa\nconst handleDisputeCreation=async(transactionId,disputeData)=>{setActionLoading(true);setError(null);try{const result=await createDispute(transactionId,disputeData);return result;}catch(error){setError(error.message);throw error;}finally{setActionLoading(false);}};// ===============================================\n// FUNCIONES DE UTILIDAD\n// ===============================================\n// Obtener transacciones filtradas\nconst getFilteredTransactions=function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let filtered=[...transactions];if(filters.role){filtered=filtered.filter(tx=>tx.role===filters.role);}if(filters.status){filtered=filtered.filter(tx=>tx.status===filters.status);}if(filters.urgent){filtered=filtered.filter(tx=>requiresUrgentAttention(tx));}if(filters.dateRange){const{start,end}=filters.dateRange;filtered=filtered.filter(tx=>{var _tx$createdAt,_tx$createdAt$toDate;const date=((_tx$createdAt=tx.createdAt)===null||_tx$createdAt===void 0?void 0:(_tx$createdAt$toDate=_tx$createdAt.toDate)===null||_tx$createdAt$toDate===void 0?void 0:_tx$createdAt$toDate.call(_tx$createdAt))||tx.createdAt;return date>=start&&date<=end;});}return filtered;};// Obtener estadísticas del usuario\nconst getUserStats=()=>{const stats={total:transactions.length,asBuyer:buyerTransactions.length,asSeller:sellerTransactions.length,completed:transactions.filter(tx=>tx.status==='completed').length,pending:transactions.filter(tx=>!['completed','cancelled_by_seller','timeout_cancelled','disputed'].includes(tx.status)).length,urgent:transactions.filter(tx=>requiresUrgentAttention(tx)).length};stats.completionRate=stats.total>0?(stats.completed/stats.total*100).toFixed(1):0;return stats;};// Obtener próximas acciones requeridas\nconst getUpcomingActions=()=>{return transactions.filter(tx=>getAvailableActions(tx).length>0).map(tx=>{var _tx$items,_tx$items$;return{transactionId:tx.id,cardName:((_tx$items=tx.items)===null||_tx$items===void 0?void 0:(_tx$items$=_tx$items[0])===null||_tx$items$===void 0?void 0:_tx$items$.cardName)||'Producto',status:tx.status,statusText:getTransactionStatusText(tx),actions:getAvailableActions(tx),timeRemaining:getTimeRemaining(tx),urgent:requiresUrgentAttention(tx),role:tx.role,otherParty:tx.role==='buyer'?tx.sellerName:tx.buyerName};}).sort((a,b)=>{// Ordenar por urgencia y luego por tiempo restante\nif(a.urgent&&!b.urgent)return-1;if(!a.urgent&&b.urgent)return 1;return a.timeRemaining-b.timeRemaining;});};// Formatear tiempo restante\nconst formatTimeRemaining=milliseconds=>{if(milliseconds<=0)return'Vencido';const days=Math.floor(milliseconds/(1000*60*60*24));const hours=Math.floor(milliseconds%(1000*60*60*24)/(1000*60*60));const minutes=Math.floor(milliseconds%(1000*60*60)/(1000*60));if(days>0){return`${days}d ${hours}h`;}else if(hours>0){return`${hours}h ${minutes}m`;}else{return`${minutes}m`;}};// Validar datos de transacción\nconst validateTransactionData=(type,data)=>{const validations={delivery:{required:['originStore','proofImage'],optional:['deliveryNotes']},payment:{required:['method','amount'],optional:['proofImage','notes']},receipt:{required:['destinationStore'],optional:['satisfactionLevel','receiptNotes']},rating:{required:['rating'],optional:['comment','categories']},dispute:{required:['type','description'],optional:['evidence','severity']}};const validation=validations[type];if(!validation){throw new Error('Tipo de validación no soportado');}const missing=validation.required.filter(field=>!data[field]);if(missing.length>0){throw new Error(`Campos requeridos faltantes: ${missing.join(', ')}`);}return true;};// Limpiar errores\nconst clearError=()=>{setError(null);};return{// Estado\ntransactions,buyerTransactions,sellerTransactions,loading,actionLoading,error,unreadNotifications,// Acciones principales\ncreateP2PTransactions,handleSellerResponse,handleDeliveryConfirmation,handlePaymentConfirmation,handleReceiptConfirmation,handleRatingSubmission,handleDisputeCreation,// Funciones de datos\ngetTransactionDetails,getFilteredTransactions,getUserStats,getUpcomingActions,// Funciones de utilidad\ngetTransactionStatusText,getAvailableActions,requiresUrgentAttention,getTimeRemaining,formatTimeRemaining,validateTransactionData,markAsRead,clearError,// Funciones del carrito P2P\ncheckAtomicAvailability,getCartByVendor};}","map":{"version":3,"names":["useState","useEffect","useTransactions","useCart","useP2PTransactions","transactions","buyerTransactions","sellerTransactions","loading","unreadNotifications","getTransactionDetails","acceptTransaction","rejectTransaction","confirmDelivery","requestPayment","confirmPaymentReceived","confirmReceipt","submitRating","createDispute","markAsRead","getTransactionStatusText","getAvailableActions","requiresUrgentAttention","getTimeRemaining","checkAtomicAvailability","createPendingTransaction","getCartByVendor","actionLoading","setActionLoading","error","setError","createP2PTransactions","contactMethod","arguments","length","undefined","buyerNotes","vendors","results","vendor","result","items","push","vendorId","vendorName","success","transactionId","data","message","handleSellerResponse","action","responseData","reason","Error","handleDeliveryConfirmation","deliveryData","handlePaymentConfirmation","paymentProof","handleReceiptConfirmation","receiptData","handleRatingSubmission","ratingData","handleDisputeCreation","disputeData","getFilteredTransactions","filters","filtered","role","filter","tx","status","urgent","dateRange","start","end","_tx$createdAt","_tx$createdAt$toDate","date","createdAt","toDate","call","getUserStats","stats","total","asBuyer","asSeller","completed","pending","includes","completionRate","toFixed","getUpcomingActions","map","_tx$items","_tx$items$","id","cardName","statusText","actions","timeRemaining","otherParty","sellerName","buyerName","sort","a","b","formatTimeRemaining","milliseconds","days","Math","floor","hours","minutes","validateTransactionData","type","validations","delivery","required","optional","payment","receipt","rating","dispute","validation","missing","field","join","clearError"],"sources":["/home/frodev/Downloads/FroDev-CR-TropicalTCGPlayers/src/hooks/useP2PTransactions.js"],"sourcesContent":["// src/hooks/useP2PTransactions.js\n// Hook personalizado para manejar transacciones P2P\n\nimport { useState, useEffect } from 'react';\nimport { useTransactions } from '../contexts/TransactionContext';\nimport { useCart } from '../contexts/CartContext';\n\nexport function useP2PTransactions() {\n  const {\n    transactions,\n    buyerTransactions,\n    sellerTransactions,\n    loading,\n    unreadNotifications,\n    getTransactionDetails,\n    acceptTransaction,\n    rejectTransaction,\n    confirmDelivery,\n    requestPayment,\n    confirmPaymentReceived,\n    confirmReceipt,\n    submitRating,\n    createDispute,\n    markAsRead,\n    getTransactionStatusText,\n    getAvailableActions,\n    requiresUrgentAttention,\n    getTimeRemaining\n  } = useTransactions();\n\n  const {\n    checkAtomicAvailability,\n    createPendingTransaction,\n    getCartByVendor\n  } = useCart();\n\n  const [actionLoading, setActionLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // ===============================================\n  // FUNCIONES DE TRANSACCIONES\n  // ===============================================\n\n  // Crear transacciones P2P para múltiples vendedores\n  const createP2PTransactions = async (contactMethod = 'whatsapp', buyerNotes = '') => {\n    setActionLoading(true);\n    setError(null);\n\n    try {\n      const vendors = getCartByVendor();\n      const results = [];\n\n      for (const vendor of vendors) {\n        try {\n          const result = await createPendingTransaction(\n            vendor.items,\n            contactMethod,\n            buyerNotes\n          );\n          results.push({\n            vendorId: vendor.vendorId,\n            vendorName: vendor.vendorName,\n            success: true,\n            transactionId: result.transactionId,\n            data: result\n          });\n        } catch (error) {\n          results.push({\n            vendorId: vendor.vendorId,\n            vendorName: vendor.vendorName,\n            success: false,\n            error: error.message\n          });\n        }\n      }\n\n      return results;\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  // Responder a una transacción como vendedor\n  const handleSellerResponse = async (transactionId, action, responseData = {}) => {\n    setActionLoading(true);\n    setError(null);\n\n    try {\n      let result;\n      if (action === 'accept') {\n        result = await acceptTransaction(transactionId, responseData);\n      } else if (action === 'reject') {\n        result = await rejectTransaction(transactionId, responseData.reason || '');\n      } else {\n        throw new Error('Acción no válida');\n      }\n\n      await markAsRead(transactionId);\n      return result;\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  // Confirmar entrega como vendedor\n  const handleDeliveryConfirmation = async (transactionId, deliveryData) => {\n    setActionLoading(true);\n    setError(null);\n\n    try {\n      const result = await confirmDelivery(transactionId, deliveryData);\n      await markAsRead(transactionId);\n      return result;\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  // Confirmar pago recibido como vendedor\n  const handlePaymentConfirmation = async (transactionId, paymentProof) => {\n    setActionLoading(true);\n    setError(null);\n\n    try {\n      const result = await confirmPaymentReceived(transactionId, paymentProof);\n      await markAsRead(transactionId);\n      return result;\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  // Confirmar recibo como comprador\n  const handleReceiptConfirmation = async (transactionId, receiptData) => {\n    setActionLoading(true);\n    setError(null);\n\n    try {\n      const result = await confirmReceipt(transactionId, receiptData);\n      await markAsRead(transactionId);\n      return result;\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  // Enviar calificación\n  const handleRatingSubmission = async (transactionId, ratingData) => {\n    setActionLoading(true);\n    setError(null);\n\n    try {\n      const result = await submitRating(transactionId, ratingData);\n      await markAsRead(transactionId);\n      return result;\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  // Crear disputa\n  const handleDisputeCreation = async (transactionId, disputeData) => {\n    setActionLoading(true);\n    setError(null);\n\n    try {\n      const result = await createDispute(transactionId, disputeData);\n      return result;\n    } catch (error) {\n      setError(error.message);\n      throw error;\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  // ===============================================\n  // FUNCIONES DE UTILIDAD\n  // ===============================================\n\n  // Obtener transacciones filtradas\n  const getFilteredTransactions = (filters = {}) => {\n    let filtered = [...transactions];\n\n    if (filters.role) {\n      filtered = filtered.filter(tx => tx.role === filters.role);\n    }\n\n    if (filters.status) {\n      filtered = filtered.filter(tx => tx.status === filters.status);\n    }\n\n    if (filters.urgent) {\n      filtered = filtered.filter(tx => requiresUrgentAttention(tx));\n    }\n\n    if (filters.dateRange) {\n      const { start, end } = filters.dateRange;\n      filtered = filtered.filter(tx => {\n        const date = tx.createdAt?.toDate?.() || tx.createdAt;\n        return date >= start && date <= end;\n      });\n    }\n\n    return filtered;\n  };\n\n  // Obtener estadísticas del usuario\n  const getUserStats = () => {\n    const stats = {\n      total: transactions.length,\n      asBuyer: buyerTransactions.length,\n      asSeller: sellerTransactions.length,\n      completed: transactions.filter(tx => tx.status === 'completed').length,\n      pending: transactions.filter(tx => !['completed', 'cancelled_by_seller', 'timeout_cancelled', 'disputed'].includes(tx.status)).length,\n      urgent: transactions.filter(tx => requiresUrgentAttention(tx)).length\n    };\n\n    stats.completionRate = stats.total > 0 ? (stats.completed / stats.total * 100).toFixed(1) : 0;\n\n    return stats;\n  };\n\n  // Obtener próximas acciones requeridas\n  const getUpcomingActions = () => {\n    return transactions\n      .filter(tx => getAvailableActions(tx).length > 0)\n      .map(tx => ({\n        transactionId: tx.id,\n        cardName: tx.items?.[0]?.cardName || 'Producto',\n        status: tx.status,\n        statusText: getTransactionStatusText(tx),\n        actions: getAvailableActions(tx),\n        timeRemaining: getTimeRemaining(tx),\n        urgent: requiresUrgentAttention(tx),\n        role: tx.role,\n        otherParty: tx.role === 'buyer' ? tx.sellerName : tx.buyerName\n      }))\n      .sort((a, b) => {\n        // Ordenar por urgencia y luego por tiempo restante\n        if (a.urgent && !b.urgent) return -1;\n        if (!a.urgent && b.urgent) return 1;\n        return a.timeRemaining - b.timeRemaining;\n      });\n  };\n\n  // Formatear tiempo restante\n  const formatTimeRemaining = (milliseconds) => {\n    if (milliseconds <= 0) return 'Vencido';\n    \n    const days = Math.floor(milliseconds / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((milliseconds % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const minutes = Math.floor((milliseconds % (1000 * 60 * 60)) / (1000 * 60));\n    \n    if (days > 0) {\n      return `${days}d ${hours}h`;\n    } else if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    } else {\n      return `${minutes}m`;\n    }\n  };\n\n  // Validar datos de transacción\n  const validateTransactionData = (type, data) => {\n    const validations = {\n      delivery: {\n        required: ['originStore', 'proofImage'],\n        optional: ['deliveryNotes']\n      },\n      payment: {\n        required: ['method', 'amount'],\n        optional: ['proofImage', 'notes']\n      },\n      receipt: {\n        required: ['destinationStore'],\n        optional: ['satisfactionLevel', 'receiptNotes']\n      },\n      rating: {\n        required: ['rating'],\n        optional: ['comment', 'categories']\n      },\n      dispute: {\n        required: ['type', 'description'],\n        optional: ['evidence', 'severity']\n      }\n    };\n\n    const validation = validations[type];\n    if (!validation) {\n      throw new Error('Tipo de validación no soportado');\n    }\n\n    const missing = validation.required.filter(field => !data[field]);\n    if (missing.length > 0) {\n      throw new Error(`Campos requeridos faltantes: ${missing.join(', ')}`);\n    }\n\n    return true;\n  };\n\n  // Limpiar errores\n  const clearError = () => {\n    setError(null);\n  };\n\n  return {\n    // Estado\n    transactions,\n    buyerTransactions,\n    sellerTransactions,\n    loading,\n    actionLoading,\n    error,\n    unreadNotifications,\n\n    // Acciones principales\n    createP2PTransactions,\n    handleSellerResponse,\n    handleDeliveryConfirmation,\n    handlePaymentConfirmation,\n    handleReceiptConfirmation,\n    handleRatingSubmission,\n    handleDisputeCreation,\n\n    // Funciones de datos\n    getTransactionDetails,\n    getFilteredTransactions,\n    getUserStats,\n    getUpcomingActions,\n\n    // Funciones de utilidad\n    getTransactionStatusText,\n    getAvailableActions,\n    requiresUrgentAttention,\n    getTimeRemaining,\n    formatTimeRemaining,\n    validateTransactionData,\n    markAsRead,\n    clearError,\n\n    // Funciones del carrito P2P\n    checkAtomicAvailability,\n    getCartByVendor\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}